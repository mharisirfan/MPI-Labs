
lab8_other.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001e  00800100  000006b6  0000072a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000006b6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000748  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000778  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000088  00000000  00000000  000007b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000d04  00000000  00000000  00000840  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007fe  00000000  00000000  00001544  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004a1  00000000  00000000  00001d42  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000158  00000000  00000000  000021e4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004cc  00000000  00000000  0000233c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000557  00000000  00000000  00002808  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000078  00000000  00000000  00002d5f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e6 eb       	ldi	r30, 0xB6	; 182
  7c:	f6 e0       	ldi	r31, 0x06	; 6
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ae 31       	cpi	r26, 0x1E	; 30
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 10 01 	call	0x220	; 0x220 <main>
  8e:	0c 94 59 03 	jmp	0x6b2	; 0x6b2 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <UART0_init>:
{
	
	char buf[12];
	printSerialStr(ltoa(num,buf,10));
	
}
  96:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
  9a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  9e:	e0 ec       	ldi	r30, 0xC0	; 192
  a0:	f0 e0       	ldi	r31, 0x00	; 0
  a2:	80 81       	ld	r24, Z
  a4:	82 60       	ori	r24, 0x02	; 2
  a6:	80 83       	st	Z, r24
  a8:	88 e1       	ldi	r24, 0x18	; 24
  aa:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
  ae:	86 e0       	ldi	r24, 0x06	; 6
  b0:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
  b4:	08 95       	ret

000000b6 <UART0_send_char>:
  b6:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  ba:	95 ff       	sbrs	r25, 5
  bc:	fc cf       	rjmp	.-8      	; 0xb6 <UART0_send_char>
  be:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
  c2:	08 95       	ret

000000c4 <printSerialStr>:
  c4:	0f 93       	push	r16
  c6:	1f 93       	push	r17
  c8:	cf 93       	push	r28
  ca:	df 93       	push	r29
  cc:	8c 01       	movw	r16, r24
  ce:	c0 e0       	ldi	r28, 0x00	; 0
  d0:	d0 e0       	ldi	r29, 0x00	; 0
  d2:	03 c0       	rjmp	.+6      	; 0xda <printSerialStr+0x16>
  d4:	0e 94 5b 00 	call	0xb6	; 0xb6 <UART0_send_char>
  d8:	21 96       	adiw	r28, 0x01	; 1
  da:	f8 01       	movw	r30, r16
  dc:	ec 0f       	add	r30, r28
  de:	fd 1f       	adc	r31, r29
  e0:	80 81       	ld	r24, Z
  e2:	81 11       	cpse	r24, r1
  e4:	f7 cf       	rjmp	.-18     	; 0xd4 <printSerialStr+0x10>
  e6:	df 91       	pop	r29
  e8:	cf 91       	pop	r28
  ea:	1f 91       	pop	r17
  ec:	0f 91       	pop	r16
  ee:	08 95       	ret

000000f0 <printSerialStrln>:
  f0:	0f 93       	push	r16
  f2:	1f 93       	push	r17
  f4:	cf 93       	push	r28
  f6:	df 93       	push	r29
  f8:	8c 01       	movw	r16, r24
  fa:	c0 e0       	ldi	r28, 0x00	; 0
  fc:	d0 e0       	ldi	r29, 0x00	; 0
  fe:	03 c0       	rjmp	.+6      	; 0x106 <printSerialStrln+0x16>
 100:	0e 94 5b 00 	call	0xb6	; 0xb6 <UART0_send_char>
 104:	21 96       	adiw	r28, 0x01	; 1
 106:	f8 01       	movw	r30, r16
 108:	ec 0f       	add	r30, r28
 10a:	fd 1f       	adc	r31, r29
 10c:	80 81       	ld	r24, Z
 10e:	81 11       	cpse	r24, r1
 110:	f7 cf       	rjmp	.-18     	; 0x100 <printSerialStrln+0x10>
 112:	8d e0       	ldi	r24, 0x0D	; 13
 114:	0e 94 5b 00 	call	0xb6	; 0xb6 <UART0_send_char>
 118:	8a e0       	ldi	r24, 0x0A	; 10
 11a:	0e 94 5b 00 	call	0xb6	; 0xb6 <UART0_send_char>
 11e:	df 91       	pop	r29
 120:	cf 91       	pop	r28
 122:	1f 91       	pop	r17
 124:	0f 91       	pop	r16
 126:	08 95       	ret

00000128 <printSerialInt>:
 128:	cf 93       	push	r28
 12a:	df 93       	push	r29
 12c:	cd b7       	in	r28, 0x3d	; 61
 12e:	de b7       	in	r29, 0x3e	; 62
 130:	2a 97       	sbiw	r28, 0x0a	; 10
 132:	0f b6       	in	r0, 0x3f	; 63
 134:	f8 94       	cli
 136:	de bf       	out	0x3e, r29	; 62
 138:	0f be       	out	0x3f, r0	; 63
 13a:	cd bf       	out	0x3d, r28	; 61
 13c:	4a e0       	ldi	r20, 0x0A	; 10
 13e:	be 01       	movw	r22, r28
 140:	6f 5f       	subi	r22, 0xFF	; 255
 142:	7f 4f       	sbci	r23, 0xFF	; 255
 144:	0e 94 24 03 	call	0x648	; 0x648 <__itoa_ncheck>
 148:	0e 94 62 00 	call	0xc4	; 0xc4 <printSerialStr>
 14c:	2a 96       	adiw	r28, 0x0a	; 10
 14e:	0f b6       	in	r0, 0x3f	; 63
 150:	f8 94       	cli
 152:	de bf       	out	0x3e, r29	; 62
 154:	0f be       	out	0x3f, r0	; 63
 156:	cd bf       	out	0x3d, r28	; 61
 158:	df 91       	pop	r29
 15a:	cf 91       	pop	r28
 15c:	08 95       	ret

0000015e <ADC_Initialize>:
the function returns an error code 0x02
*/
/*???*/
unsigned char ADC_Initialize(unsigned char mode)
{
	if(mode == 1)// Single Conversion Mode
 15e:	81 30       	cpi	r24, 0x01	; 1
 160:	61 f4       	brne	.+24     	; 0x17a <ADC_Initialize+0x1c>
	{
		/*???*/
		/*** Write Code for this ***/
	    ADMUX |= (1<<REFS0);
 162:	ec e7       	ldi	r30, 0x7C	; 124
 164:	f0 e0       	ldi	r31, 0x00	; 0
 166:	80 81       	ld	r24, Z
 168:	80 64       	ori	r24, 0x40	; 64
 16a:	80 83       	st	Z, r24
	    //set prescaller to 128 and enable ADC
	    ADCSRA |= (1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0)|(1<<ADEN);
 16c:	ea e7       	ldi	r30, 0x7A	; 122
 16e:	f0 e0       	ldi	r31, 0x00	; 0
 170:	80 81       	ld	r24, Z
 172:	87 68       	ori	r24, 0x87	; 135
 174:	80 83       	st	Z, r24
	     	Left adjust result. Vref = AVCC = 5V
		Select the pre-scaler for 16 MHz System Clock
		Pre-scaler = 64
		Clock for ADC = 125 KHz (should be between 50K to 200K)
		*/
		return(0);
 176:	80 e0       	ldi	r24, 0x00	; 0
 178:	08 95       	ret
	}
	if(mode == 2) // Free Running Mode
 17a:	82 30       	cpi	r24, 0x02	; 2
 17c:	a9 f4       	brne	.+42     	; 0x1a8 <ADC_Initialize+0x4a>
	{
		/*???*/
		/*** Write Code for this ***/
		  ADMUX |= (1<<ADLAR);
 17e:	ec e7       	ldi	r30, 0x7C	; 124
 180:	f0 e0       	ldi	r31, 0x00	; 0
 182:	80 81       	ld	r24, Z
 184:	80 62       	ori	r24, 0x20	; 32
 186:	80 83       	st	Z, r24
		  ADMUX |= (1<<REFS0);
 188:	80 81       	ld	r24, Z
 18a:	80 64       	ori	r24, 0x40	; 64
 18c:	80 83       	st	Z, r24
		  ADMUX &= ~(1<<REFS1);
 18e:	80 81       	ld	r24, Z
 190:	8f 77       	andi	r24, 0x7F	; 127
 192:	80 83       	st	Z, r24
		  
		  ADCSRA |= (1<<ADPS1) |(1<<ADPS2)| (1<<ADEN);
 194:	ea e7       	ldi	r30, 0x7A	; 122
 196:	f0 e0       	ldi	r31, 0x00	; 0
 198:	80 81       	ld	r24, Z
 19a:	86 68       	ori	r24, 0x86	; 134
 19c:	80 83       	st	Z, r24
		  ADCSRA &= ~(1<<ADPS0);
 19e:	80 81       	ld	r24, Z
 1a0:	8e 7f       	andi	r24, 0xFE	; 254
 1a2:	80 83       	st	Z, r24
		Left adjust result. Vref = AVCC = 5V
		Select the pre-scaler for 16 MHz System Clock
		Pre-scaler = 128
		Clock for ADC = 125 KHz (should be between 50K to 200K)
		*/
		return(0);
 1a4:	80 e0       	ldi	r24, 0x00	; 0
 1a6:	08 95       	ret
	}
	else
	return (0x02);// return error code: Wrong Mode Selection
 1a8:	82 e0       	ldi	r24, 0x02	; 2
}
 1aa:	08 95       	ret

000001ac <ADC_Read>:
{
	/*???*/
	unsigned char ADC_lo;
	unsigned char ADC_hi;
	unsigned int result;
	ADMUX = (ADMUX & 0xF0) | (channel & 0x0F);
 1ac:	ec e7       	ldi	r30, 0x7C	; 124
 1ae:	f0 e0       	ldi	r31, 0x00	; 0
 1b0:	90 81       	ld	r25, Z
 1b2:	90 7f       	andi	r25, 0xF0	; 240
 1b4:	8f 70       	andi	r24, 0x0F	; 15
 1b6:	89 2b       	or	r24, r25
 1b8:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADSC);//start conversation
 1ba:	ea e7       	ldi	r30, 0x7A	; 122
 1bc:	f0 e0       	ldi	r31, 0x00	; 0
 1be:	80 81       	ld	r24, Z
 1c0:	80 64       	ori	r24, 0x40	; 64
 1c2:	80 83       	st	Z, r24
	//Wait until ADC converstain complete. ADSC will be ZERO after completion.
	while(ADCSRA & (1<<ADSC));
 1c4:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 1c8:	86 fd       	sbrc	r24, 6
 1ca:	fc cf       	rjmp	.-8      	; 0x1c4 <ADC_Read+0x18>
	return ADC;
 1cc:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 1d0:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
}
 1d4:	08 95       	ret

000001d6 <ADC_Convert>:
*/
float ADC_Convert(unsigned int ADC_value)
{
	float Vin;
	/*???*/
	Vin = ADC_VREF * ((float)ADC_value/ADC_QLEVELS);
 1d6:	bc 01       	movw	r22, r24
 1d8:	80 e0       	ldi	r24, 0x00	; 0
 1da:	90 e0       	ldi	r25, 0x00	; 0
 1dc:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <__floatunsisf>
 1e0:	20 e0       	ldi	r18, 0x00	; 0
 1e2:	30 e0       	ldi	r19, 0x00	; 0
 1e4:	40 e8       	ldi	r20, 0x80	; 128
 1e6:	5a e3       	ldi	r21, 0x3A	; 58
 1e8:	0e 94 b7 02 	call	0x56e	; 0x56e <__mulsf3>
 1ec:	20 e0       	ldi	r18, 0x00	; 0
 1ee:	30 e0       	ldi	r19, 0x00	; 0
 1f0:	40 ea       	ldi	r20, 0xA0	; 160
 1f2:	50 e4       	ldi	r21, 0x40	; 64
 1f4:	0e 94 b7 02 	call	0x56e	; 0x56e <__mulsf3>
	return Vin;
}
 1f8:	08 95       	ret

000001fa <VinToTemp>:
{
	unsigned char temperature=0;
	// 10 mv per centigrade
	float VoltsPerCentigrade = 0.01;
	/*???*/
	temperature = (unsigned char) floor(Vin/VoltsPerCentigrade);
 1fa:	2a e0       	ldi	r18, 0x0A	; 10
 1fc:	37 ed       	ldi	r19, 0xD7	; 215
 1fe:	43 e2       	ldi	r20, 0x23	; 35
 200:	5c e3       	ldi	r21, 0x3C	; 60
 202:	0e 94 30 01 	call	0x260	; 0x260 <__divsf3>
 206:	0e 94 0e 02 	call	0x41c	; 0x41c <floor>
 20a:	0e 94 a2 01 	call	0x344	; 0x344 <__fixunssfsi>
 20e:	86 2f       	mov	r24, r22
	// Temperature value returned
	return temperature;
}
 210:	08 95       	ret

00000212 <read_temp_sensor>:
result in Degree Celsius as an 8-Bit unsigned int
*/
unsigned char read_temp_sensor(unsigned char ADC_channel)
{
	// Read the sensor Connected at ADC_channel
	unsigned int ADC_value = ADC_Read(ADC_channel);
 212:	0e 94 d6 00 	call	0x1ac	; 0x1ac <ADC_Read>
	// Get the value in floating point
	float Vin = ADC_Convert(ADC_value);
 216:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <ADC_Convert>
	unsigned char temp_celsius = VinToTemp (Vin);
 21a:	0e 94 fd 00 	call	0x1fa	; 0x1fa <VinToTemp>
	// Convert to temprature and return
	return temp_celsius;
}
 21e:	08 95       	ret

00000220 <main>:
#define TEMP_SENSOR_CHANNEL ADC_CHANNEL0

/*****************************************************************/
int main(void)
{
	ADC_Initialize(ADC_MODE);
 220:	81 e0       	ldi	r24, 0x01	; 1
 222:	0e 94 af 00 	call	0x15e	; 0x15e <ADC_Initialize>
	DIDR0=0xFF;
 226:	cf ef       	ldi	r28, 0xFF	; 255
 228:	c0 93 7e 00 	sts	0x007E, r28	; 0x80007e <__TEXT_REGION_LENGTH__+0x7f807e>
	/*???*/
	#ifdef TASK1
	UART0_init(MYUBRR); //(F_CPU/8/BAUD0-1)
 22c:	87 e6       	ldi	r24, 0x67	; 103
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	0e 94 4b 00 	call	0x96	; 0x96 <UART0_init>
	printSerialStrln("Lab 8: ");
 234:	80 e0       	ldi	r24, 0x00	; 0
 236:	91 e0       	ldi	r25, 0x01	; 1
 238:	0e 94 78 00 	call	0xf0	; 0xf0 <printSerialStrln>
	unsigned char temperature;
	DDRD = 0xFF;
 23c:	ca b9       	out	0x0a, r28	; 10
	while(1)
	{
		/*???*/
		printSerialStr("Temperature is: ");
 23e:	88 e0       	ldi	r24, 0x08	; 8
 240:	91 e0       	ldi	r25, 0x01	; 1
 242:	0e 94 62 00 	call	0xc4	; 0xc4 <printSerialStr>
		temperature = read_temp_sensor(TEMP_SENSOR_CHANNEL);
 246:	80 e0       	ldi	r24, 0x00	; 0
 248:	0e 94 09 01 	call	0x212	; 0x212 <read_temp_sensor>
 24c:	c8 2f       	mov	r28, r24
		printSerialInt(temperature);
 24e:	90 e0       	ldi	r25, 0x00	; 0
 250:	0e 94 94 00 	call	0x128	; 0x128 <printSerialInt>
		printSerialStr("\r \n");
 254:	89 e1       	ldi	r24, 0x19	; 25
 256:	91 e0       	ldi	r25, 0x01	; 1
 258:	0e 94 62 00 	call	0xc4	; 0xc4 <printSerialStr>
		PORTD = temperature;
 25c:	cb b9       	out	0x0b, r28	; 11
 25e:	ef cf       	rjmp	.-34     	; 0x23e <main+0x1e>

00000260 <__divsf3>:
 260:	0e 94 44 01 	call	0x288	; 0x288 <__divsf3x>
 264:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__fp_round>
 268:	0e 94 5e 02 	call	0x4bc	; 0x4bc <__fp_pscB>
 26c:	58 f0       	brcs	.+22     	; 0x284 <__divsf3+0x24>
 26e:	0e 94 57 02 	call	0x4ae	; 0x4ae <__fp_pscA>
 272:	40 f0       	brcs	.+16     	; 0x284 <__divsf3+0x24>
 274:	29 f4       	brne	.+10     	; 0x280 <__divsf3+0x20>
 276:	5f 3f       	cpi	r21, 0xFF	; 255
 278:	29 f0       	breq	.+10     	; 0x284 <__divsf3+0x24>
 27a:	0c 94 25 02 	jmp	0x44a	; 0x44a <__fp_inf>
 27e:	51 11       	cpse	r21, r1
 280:	0c 94 b1 02 	jmp	0x562	; 0x562 <__fp_szero>
 284:	0c 94 54 02 	jmp	0x4a8	; 0x4a8 <__fp_nan>

00000288 <__divsf3x>:
 288:	0e 94 76 02 	call	0x4ec	; 0x4ec <__fp_split3>
 28c:	68 f3       	brcs	.-38     	; 0x268 <__divsf3+0x8>

0000028e <__divsf3_pse>:
 28e:	99 23       	and	r25, r25
 290:	b1 f3       	breq	.-20     	; 0x27e <__divsf3+0x1e>
 292:	55 23       	and	r21, r21
 294:	91 f3       	breq	.-28     	; 0x27a <__divsf3+0x1a>
 296:	95 1b       	sub	r25, r21
 298:	55 0b       	sbc	r21, r21
 29a:	bb 27       	eor	r27, r27
 29c:	aa 27       	eor	r26, r26
 29e:	62 17       	cp	r22, r18
 2a0:	73 07       	cpc	r23, r19
 2a2:	84 07       	cpc	r24, r20
 2a4:	38 f0       	brcs	.+14     	; 0x2b4 <__divsf3_pse+0x26>
 2a6:	9f 5f       	subi	r25, 0xFF	; 255
 2a8:	5f 4f       	sbci	r21, 0xFF	; 255
 2aa:	22 0f       	add	r18, r18
 2ac:	33 1f       	adc	r19, r19
 2ae:	44 1f       	adc	r20, r20
 2b0:	aa 1f       	adc	r26, r26
 2b2:	a9 f3       	breq	.-22     	; 0x29e <__divsf3_pse+0x10>
 2b4:	35 d0       	rcall	.+106    	; 0x320 <__divsf3_pse+0x92>
 2b6:	0e 2e       	mov	r0, r30
 2b8:	3a f0       	brmi	.+14     	; 0x2c8 <__divsf3_pse+0x3a>
 2ba:	e0 e8       	ldi	r30, 0x80	; 128
 2bc:	32 d0       	rcall	.+100    	; 0x322 <__divsf3_pse+0x94>
 2be:	91 50       	subi	r25, 0x01	; 1
 2c0:	50 40       	sbci	r21, 0x00	; 0
 2c2:	e6 95       	lsr	r30
 2c4:	00 1c       	adc	r0, r0
 2c6:	ca f7       	brpl	.-14     	; 0x2ba <__divsf3_pse+0x2c>
 2c8:	2b d0       	rcall	.+86     	; 0x320 <__divsf3_pse+0x92>
 2ca:	fe 2f       	mov	r31, r30
 2cc:	29 d0       	rcall	.+82     	; 0x320 <__divsf3_pse+0x92>
 2ce:	66 0f       	add	r22, r22
 2d0:	77 1f       	adc	r23, r23
 2d2:	88 1f       	adc	r24, r24
 2d4:	bb 1f       	adc	r27, r27
 2d6:	26 17       	cp	r18, r22
 2d8:	37 07       	cpc	r19, r23
 2da:	48 07       	cpc	r20, r24
 2dc:	ab 07       	cpc	r26, r27
 2de:	b0 e8       	ldi	r27, 0x80	; 128
 2e0:	09 f0       	breq	.+2      	; 0x2e4 <__divsf3_pse+0x56>
 2e2:	bb 0b       	sbc	r27, r27
 2e4:	80 2d       	mov	r24, r0
 2e6:	bf 01       	movw	r22, r30
 2e8:	ff 27       	eor	r31, r31
 2ea:	93 58       	subi	r25, 0x83	; 131
 2ec:	5f 4f       	sbci	r21, 0xFF	; 255
 2ee:	3a f0       	brmi	.+14     	; 0x2fe <__divsf3_pse+0x70>
 2f0:	9e 3f       	cpi	r25, 0xFE	; 254
 2f2:	51 05       	cpc	r21, r1
 2f4:	78 f0       	brcs	.+30     	; 0x314 <__divsf3_pse+0x86>
 2f6:	0c 94 25 02 	jmp	0x44a	; 0x44a <__fp_inf>
 2fa:	0c 94 b1 02 	jmp	0x562	; 0x562 <__fp_szero>
 2fe:	5f 3f       	cpi	r21, 0xFF	; 255
 300:	e4 f3       	brlt	.-8      	; 0x2fa <__divsf3_pse+0x6c>
 302:	98 3e       	cpi	r25, 0xE8	; 232
 304:	d4 f3       	brlt	.-12     	; 0x2fa <__divsf3_pse+0x6c>
 306:	86 95       	lsr	r24
 308:	77 95       	ror	r23
 30a:	67 95       	ror	r22
 30c:	b7 95       	ror	r27
 30e:	f7 95       	ror	r31
 310:	9f 5f       	subi	r25, 0xFF	; 255
 312:	c9 f7       	brne	.-14     	; 0x306 <__divsf3_pse+0x78>
 314:	88 0f       	add	r24, r24
 316:	91 1d       	adc	r25, r1
 318:	96 95       	lsr	r25
 31a:	87 95       	ror	r24
 31c:	97 f9       	bld	r25, 7
 31e:	08 95       	ret
 320:	e1 e0       	ldi	r30, 0x01	; 1
 322:	66 0f       	add	r22, r22
 324:	77 1f       	adc	r23, r23
 326:	88 1f       	adc	r24, r24
 328:	bb 1f       	adc	r27, r27
 32a:	62 17       	cp	r22, r18
 32c:	73 07       	cpc	r23, r19
 32e:	84 07       	cpc	r24, r20
 330:	ba 07       	cpc	r27, r26
 332:	20 f0       	brcs	.+8      	; 0x33c <__divsf3_pse+0xae>
 334:	62 1b       	sub	r22, r18
 336:	73 0b       	sbc	r23, r19
 338:	84 0b       	sbc	r24, r20
 33a:	ba 0b       	sbc	r27, r26
 33c:	ee 1f       	adc	r30, r30
 33e:	88 f7       	brcc	.-30     	; 0x322 <__divsf3_pse+0x94>
 340:	e0 95       	com	r30
 342:	08 95       	ret

00000344 <__fixunssfsi>:
 344:	0e 94 7e 02 	call	0x4fc	; 0x4fc <__fp_splitA>
 348:	88 f0       	brcs	.+34     	; 0x36c <__fixunssfsi+0x28>
 34a:	9f 57       	subi	r25, 0x7F	; 127
 34c:	98 f0       	brcs	.+38     	; 0x374 <__fixunssfsi+0x30>
 34e:	b9 2f       	mov	r27, r25
 350:	99 27       	eor	r25, r25
 352:	b7 51       	subi	r27, 0x17	; 23
 354:	b0 f0       	brcs	.+44     	; 0x382 <__fixunssfsi+0x3e>
 356:	e1 f0       	breq	.+56     	; 0x390 <__fixunssfsi+0x4c>
 358:	66 0f       	add	r22, r22
 35a:	77 1f       	adc	r23, r23
 35c:	88 1f       	adc	r24, r24
 35e:	99 1f       	adc	r25, r25
 360:	1a f0       	brmi	.+6      	; 0x368 <__fixunssfsi+0x24>
 362:	ba 95       	dec	r27
 364:	c9 f7       	brne	.-14     	; 0x358 <__fixunssfsi+0x14>
 366:	14 c0       	rjmp	.+40     	; 0x390 <__fixunssfsi+0x4c>
 368:	b1 30       	cpi	r27, 0x01	; 1
 36a:	91 f0       	breq	.+36     	; 0x390 <__fixunssfsi+0x4c>
 36c:	0e 94 b0 02 	call	0x560	; 0x560 <__fp_zero>
 370:	b1 e0       	ldi	r27, 0x01	; 1
 372:	08 95       	ret
 374:	0c 94 b0 02 	jmp	0x560	; 0x560 <__fp_zero>
 378:	67 2f       	mov	r22, r23
 37a:	78 2f       	mov	r23, r24
 37c:	88 27       	eor	r24, r24
 37e:	b8 5f       	subi	r27, 0xF8	; 248
 380:	39 f0       	breq	.+14     	; 0x390 <__fixunssfsi+0x4c>
 382:	b9 3f       	cpi	r27, 0xF9	; 249
 384:	cc f3       	brlt	.-14     	; 0x378 <__fixunssfsi+0x34>
 386:	86 95       	lsr	r24
 388:	77 95       	ror	r23
 38a:	67 95       	ror	r22
 38c:	b3 95       	inc	r27
 38e:	d9 f7       	brne	.-10     	; 0x386 <__fixunssfsi+0x42>
 390:	3e f4       	brtc	.+14     	; 0x3a0 <__fixunssfsi+0x5c>
 392:	90 95       	com	r25
 394:	80 95       	com	r24
 396:	70 95       	com	r23
 398:	61 95       	neg	r22
 39a:	7f 4f       	sbci	r23, 0xFF	; 255
 39c:	8f 4f       	sbci	r24, 0xFF	; 255
 39e:	9f 4f       	sbci	r25, 0xFF	; 255
 3a0:	08 95       	ret

000003a2 <__floatunsisf>:
 3a2:	e8 94       	clt
 3a4:	09 c0       	rjmp	.+18     	; 0x3b8 <__floatsisf+0x12>

000003a6 <__floatsisf>:
 3a6:	97 fb       	bst	r25, 7
 3a8:	3e f4       	brtc	.+14     	; 0x3b8 <__floatsisf+0x12>
 3aa:	90 95       	com	r25
 3ac:	80 95       	com	r24
 3ae:	70 95       	com	r23
 3b0:	61 95       	neg	r22
 3b2:	7f 4f       	sbci	r23, 0xFF	; 255
 3b4:	8f 4f       	sbci	r24, 0xFF	; 255
 3b6:	9f 4f       	sbci	r25, 0xFF	; 255
 3b8:	99 23       	and	r25, r25
 3ba:	a9 f0       	breq	.+42     	; 0x3e6 <__floatsisf+0x40>
 3bc:	f9 2f       	mov	r31, r25
 3be:	96 e9       	ldi	r25, 0x96	; 150
 3c0:	bb 27       	eor	r27, r27
 3c2:	93 95       	inc	r25
 3c4:	f6 95       	lsr	r31
 3c6:	87 95       	ror	r24
 3c8:	77 95       	ror	r23
 3ca:	67 95       	ror	r22
 3cc:	b7 95       	ror	r27
 3ce:	f1 11       	cpse	r31, r1
 3d0:	f8 cf       	rjmp	.-16     	; 0x3c2 <__floatsisf+0x1c>
 3d2:	fa f4       	brpl	.+62     	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 3d4:	bb 0f       	add	r27, r27
 3d6:	11 f4       	brne	.+4      	; 0x3dc <__floatsisf+0x36>
 3d8:	60 ff       	sbrs	r22, 0
 3da:	1b c0       	rjmp	.+54     	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 3dc:	6f 5f       	subi	r22, 0xFF	; 255
 3de:	7f 4f       	sbci	r23, 0xFF	; 255
 3e0:	8f 4f       	sbci	r24, 0xFF	; 255
 3e2:	9f 4f       	sbci	r25, 0xFF	; 255
 3e4:	16 c0       	rjmp	.+44     	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 3e6:	88 23       	and	r24, r24
 3e8:	11 f0       	breq	.+4      	; 0x3ee <__floatsisf+0x48>
 3ea:	96 e9       	ldi	r25, 0x96	; 150
 3ec:	11 c0       	rjmp	.+34     	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 3ee:	77 23       	and	r23, r23
 3f0:	21 f0       	breq	.+8      	; 0x3fa <__floatsisf+0x54>
 3f2:	9e e8       	ldi	r25, 0x8E	; 142
 3f4:	87 2f       	mov	r24, r23
 3f6:	76 2f       	mov	r23, r22
 3f8:	05 c0       	rjmp	.+10     	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
 3fa:	66 23       	and	r22, r22
 3fc:	71 f0       	breq	.+28     	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 3fe:	96 e8       	ldi	r25, 0x86	; 134
 400:	86 2f       	mov	r24, r22
 402:	70 e0       	ldi	r23, 0x00	; 0
 404:	60 e0       	ldi	r22, 0x00	; 0
 406:	2a f0       	brmi	.+10     	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 408:	9a 95       	dec	r25
 40a:	66 0f       	add	r22, r22
 40c:	77 1f       	adc	r23, r23
 40e:	88 1f       	adc	r24, r24
 410:	da f7       	brpl	.-10     	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 412:	88 0f       	add	r24, r24
 414:	96 95       	lsr	r25
 416:	87 95       	ror	r24
 418:	97 f9       	bld	r25, 7
 41a:	08 95       	ret

0000041c <floor>:
 41c:	0e 94 98 02 	call	0x530	; 0x530 <__fp_trunc>
 420:	90 f0       	brcs	.+36     	; 0x446 <floor+0x2a>
 422:	9f 37       	cpi	r25, 0x7F	; 127
 424:	48 f4       	brcc	.+18     	; 0x438 <floor+0x1c>
 426:	91 11       	cpse	r25, r1
 428:	16 f0       	brts	.+4      	; 0x42e <floor+0x12>
 42a:	0c 94 b1 02 	jmp	0x562	; 0x562 <__fp_szero>
 42e:	60 e0       	ldi	r22, 0x00	; 0
 430:	70 e0       	ldi	r23, 0x00	; 0
 432:	80 e8       	ldi	r24, 0x80	; 128
 434:	9f eb       	ldi	r25, 0xBF	; 191
 436:	08 95       	ret
 438:	26 f4       	brtc	.+8      	; 0x442 <floor+0x26>
 43a:	1b 16       	cp	r1, r27
 43c:	61 1d       	adc	r22, r1
 43e:	71 1d       	adc	r23, r1
 440:	81 1d       	adc	r24, r1
 442:	0c 94 2b 02 	jmp	0x456	; 0x456 <__fp_mintl>
 446:	0c 94 46 02 	jmp	0x48c	; 0x48c <__fp_mpack>

0000044a <__fp_inf>:
 44a:	97 f9       	bld	r25, 7
 44c:	9f 67       	ori	r25, 0x7F	; 127
 44e:	80 e8       	ldi	r24, 0x80	; 128
 450:	70 e0       	ldi	r23, 0x00	; 0
 452:	60 e0       	ldi	r22, 0x00	; 0
 454:	08 95       	ret

00000456 <__fp_mintl>:
 456:	88 23       	and	r24, r24
 458:	71 f4       	brne	.+28     	; 0x476 <__fp_mintl+0x20>
 45a:	77 23       	and	r23, r23
 45c:	21 f0       	breq	.+8      	; 0x466 <__fp_mintl+0x10>
 45e:	98 50       	subi	r25, 0x08	; 8
 460:	87 2b       	or	r24, r23
 462:	76 2f       	mov	r23, r22
 464:	07 c0       	rjmp	.+14     	; 0x474 <__fp_mintl+0x1e>
 466:	66 23       	and	r22, r22
 468:	11 f4       	brne	.+4      	; 0x46e <__fp_mintl+0x18>
 46a:	99 27       	eor	r25, r25
 46c:	0d c0       	rjmp	.+26     	; 0x488 <__fp_mintl+0x32>
 46e:	90 51       	subi	r25, 0x10	; 16
 470:	86 2b       	or	r24, r22
 472:	70 e0       	ldi	r23, 0x00	; 0
 474:	60 e0       	ldi	r22, 0x00	; 0
 476:	2a f0       	brmi	.+10     	; 0x482 <__fp_mintl+0x2c>
 478:	9a 95       	dec	r25
 47a:	66 0f       	add	r22, r22
 47c:	77 1f       	adc	r23, r23
 47e:	88 1f       	adc	r24, r24
 480:	da f7       	brpl	.-10     	; 0x478 <__fp_mintl+0x22>
 482:	88 0f       	add	r24, r24
 484:	96 95       	lsr	r25
 486:	87 95       	ror	r24
 488:	97 f9       	bld	r25, 7
 48a:	08 95       	ret

0000048c <__fp_mpack>:
 48c:	9f 3f       	cpi	r25, 0xFF	; 255
 48e:	31 f0       	breq	.+12     	; 0x49c <__fp_mpack_finite+0xc>

00000490 <__fp_mpack_finite>:
 490:	91 50       	subi	r25, 0x01	; 1
 492:	20 f4       	brcc	.+8      	; 0x49c <__fp_mpack_finite+0xc>
 494:	87 95       	ror	r24
 496:	77 95       	ror	r23
 498:	67 95       	ror	r22
 49a:	b7 95       	ror	r27
 49c:	88 0f       	add	r24, r24
 49e:	91 1d       	adc	r25, r1
 4a0:	96 95       	lsr	r25
 4a2:	87 95       	ror	r24
 4a4:	97 f9       	bld	r25, 7
 4a6:	08 95       	ret

000004a8 <__fp_nan>:
 4a8:	9f ef       	ldi	r25, 0xFF	; 255
 4aa:	80 ec       	ldi	r24, 0xC0	; 192
 4ac:	08 95       	ret

000004ae <__fp_pscA>:
 4ae:	00 24       	eor	r0, r0
 4b0:	0a 94       	dec	r0
 4b2:	16 16       	cp	r1, r22
 4b4:	17 06       	cpc	r1, r23
 4b6:	18 06       	cpc	r1, r24
 4b8:	09 06       	cpc	r0, r25
 4ba:	08 95       	ret

000004bc <__fp_pscB>:
 4bc:	00 24       	eor	r0, r0
 4be:	0a 94       	dec	r0
 4c0:	12 16       	cp	r1, r18
 4c2:	13 06       	cpc	r1, r19
 4c4:	14 06       	cpc	r1, r20
 4c6:	05 06       	cpc	r0, r21
 4c8:	08 95       	ret

000004ca <__fp_round>:
 4ca:	09 2e       	mov	r0, r25
 4cc:	03 94       	inc	r0
 4ce:	00 0c       	add	r0, r0
 4d0:	11 f4       	brne	.+4      	; 0x4d6 <__fp_round+0xc>
 4d2:	88 23       	and	r24, r24
 4d4:	52 f0       	brmi	.+20     	; 0x4ea <__fp_round+0x20>
 4d6:	bb 0f       	add	r27, r27
 4d8:	40 f4       	brcc	.+16     	; 0x4ea <__fp_round+0x20>
 4da:	bf 2b       	or	r27, r31
 4dc:	11 f4       	brne	.+4      	; 0x4e2 <__fp_round+0x18>
 4de:	60 ff       	sbrs	r22, 0
 4e0:	04 c0       	rjmp	.+8      	; 0x4ea <__fp_round+0x20>
 4e2:	6f 5f       	subi	r22, 0xFF	; 255
 4e4:	7f 4f       	sbci	r23, 0xFF	; 255
 4e6:	8f 4f       	sbci	r24, 0xFF	; 255
 4e8:	9f 4f       	sbci	r25, 0xFF	; 255
 4ea:	08 95       	ret

000004ec <__fp_split3>:
 4ec:	57 fd       	sbrc	r21, 7
 4ee:	90 58       	subi	r25, 0x80	; 128
 4f0:	44 0f       	add	r20, r20
 4f2:	55 1f       	adc	r21, r21
 4f4:	59 f0       	breq	.+22     	; 0x50c <__fp_splitA+0x10>
 4f6:	5f 3f       	cpi	r21, 0xFF	; 255
 4f8:	71 f0       	breq	.+28     	; 0x516 <__fp_splitA+0x1a>
 4fa:	47 95       	ror	r20

000004fc <__fp_splitA>:
 4fc:	88 0f       	add	r24, r24
 4fe:	97 fb       	bst	r25, 7
 500:	99 1f       	adc	r25, r25
 502:	61 f0       	breq	.+24     	; 0x51c <__fp_splitA+0x20>
 504:	9f 3f       	cpi	r25, 0xFF	; 255
 506:	79 f0       	breq	.+30     	; 0x526 <__fp_splitA+0x2a>
 508:	87 95       	ror	r24
 50a:	08 95       	ret
 50c:	12 16       	cp	r1, r18
 50e:	13 06       	cpc	r1, r19
 510:	14 06       	cpc	r1, r20
 512:	55 1f       	adc	r21, r21
 514:	f2 cf       	rjmp	.-28     	; 0x4fa <__fp_split3+0xe>
 516:	46 95       	lsr	r20
 518:	f1 df       	rcall	.-30     	; 0x4fc <__fp_splitA>
 51a:	08 c0       	rjmp	.+16     	; 0x52c <__fp_splitA+0x30>
 51c:	16 16       	cp	r1, r22
 51e:	17 06       	cpc	r1, r23
 520:	18 06       	cpc	r1, r24
 522:	99 1f       	adc	r25, r25
 524:	f1 cf       	rjmp	.-30     	; 0x508 <__fp_splitA+0xc>
 526:	86 95       	lsr	r24
 528:	71 05       	cpc	r23, r1
 52a:	61 05       	cpc	r22, r1
 52c:	08 94       	sec
 52e:	08 95       	ret

00000530 <__fp_trunc>:
 530:	0e 94 7e 02 	call	0x4fc	; 0x4fc <__fp_splitA>
 534:	a0 f0       	brcs	.+40     	; 0x55e <__fp_trunc+0x2e>
 536:	be e7       	ldi	r27, 0x7E	; 126
 538:	b9 17       	cp	r27, r25
 53a:	88 f4       	brcc	.+34     	; 0x55e <__fp_trunc+0x2e>
 53c:	bb 27       	eor	r27, r27
 53e:	9f 38       	cpi	r25, 0x8F	; 143
 540:	60 f4       	brcc	.+24     	; 0x55a <__fp_trunc+0x2a>
 542:	16 16       	cp	r1, r22
 544:	b1 1d       	adc	r27, r1
 546:	67 2f       	mov	r22, r23
 548:	78 2f       	mov	r23, r24
 54a:	88 27       	eor	r24, r24
 54c:	98 5f       	subi	r25, 0xF8	; 248
 54e:	f7 cf       	rjmp	.-18     	; 0x53e <__fp_trunc+0xe>
 550:	86 95       	lsr	r24
 552:	77 95       	ror	r23
 554:	67 95       	ror	r22
 556:	b1 1d       	adc	r27, r1
 558:	93 95       	inc	r25
 55a:	96 39       	cpi	r25, 0x96	; 150
 55c:	c8 f3       	brcs	.-14     	; 0x550 <__fp_trunc+0x20>
 55e:	08 95       	ret

00000560 <__fp_zero>:
 560:	e8 94       	clt

00000562 <__fp_szero>:
 562:	bb 27       	eor	r27, r27
 564:	66 27       	eor	r22, r22
 566:	77 27       	eor	r23, r23
 568:	cb 01       	movw	r24, r22
 56a:	97 f9       	bld	r25, 7
 56c:	08 95       	ret

0000056e <__mulsf3>:
 56e:	0e 94 ca 02 	call	0x594	; 0x594 <__mulsf3x>
 572:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__fp_round>
 576:	0e 94 57 02 	call	0x4ae	; 0x4ae <__fp_pscA>
 57a:	38 f0       	brcs	.+14     	; 0x58a <__mulsf3+0x1c>
 57c:	0e 94 5e 02 	call	0x4bc	; 0x4bc <__fp_pscB>
 580:	20 f0       	brcs	.+8      	; 0x58a <__mulsf3+0x1c>
 582:	95 23       	and	r25, r21
 584:	11 f0       	breq	.+4      	; 0x58a <__mulsf3+0x1c>
 586:	0c 94 25 02 	jmp	0x44a	; 0x44a <__fp_inf>
 58a:	0c 94 54 02 	jmp	0x4a8	; 0x4a8 <__fp_nan>
 58e:	11 24       	eor	r1, r1
 590:	0c 94 b1 02 	jmp	0x562	; 0x562 <__fp_szero>

00000594 <__mulsf3x>:
 594:	0e 94 76 02 	call	0x4ec	; 0x4ec <__fp_split3>
 598:	70 f3       	brcs	.-36     	; 0x576 <__mulsf3+0x8>

0000059a <__mulsf3_pse>:
 59a:	95 9f       	mul	r25, r21
 59c:	c1 f3       	breq	.-16     	; 0x58e <__mulsf3+0x20>
 59e:	95 0f       	add	r25, r21
 5a0:	50 e0       	ldi	r21, 0x00	; 0
 5a2:	55 1f       	adc	r21, r21
 5a4:	62 9f       	mul	r22, r18
 5a6:	f0 01       	movw	r30, r0
 5a8:	72 9f       	mul	r23, r18
 5aa:	bb 27       	eor	r27, r27
 5ac:	f0 0d       	add	r31, r0
 5ae:	b1 1d       	adc	r27, r1
 5b0:	63 9f       	mul	r22, r19
 5b2:	aa 27       	eor	r26, r26
 5b4:	f0 0d       	add	r31, r0
 5b6:	b1 1d       	adc	r27, r1
 5b8:	aa 1f       	adc	r26, r26
 5ba:	64 9f       	mul	r22, r20
 5bc:	66 27       	eor	r22, r22
 5be:	b0 0d       	add	r27, r0
 5c0:	a1 1d       	adc	r26, r1
 5c2:	66 1f       	adc	r22, r22
 5c4:	82 9f       	mul	r24, r18
 5c6:	22 27       	eor	r18, r18
 5c8:	b0 0d       	add	r27, r0
 5ca:	a1 1d       	adc	r26, r1
 5cc:	62 1f       	adc	r22, r18
 5ce:	73 9f       	mul	r23, r19
 5d0:	b0 0d       	add	r27, r0
 5d2:	a1 1d       	adc	r26, r1
 5d4:	62 1f       	adc	r22, r18
 5d6:	83 9f       	mul	r24, r19
 5d8:	a0 0d       	add	r26, r0
 5da:	61 1d       	adc	r22, r1
 5dc:	22 1f       	adc	r18, r18
 5de:	74 9f       	mul	r23, r20
 5e0:	33 27       	eor	r19, r19
 5e2:	a0 0d       	add	r26, r0
 5e4:	61 1d       	adc	r22, r1
 5e6:	23 1f       	adc	r18, r19
 5e8:	84 9f       	mul	r24, r20
 5ea:	60 0d       	add	r22, r0
 5ec:	21 1d       	adc	r18, r1
 5ee:	82 2f       	mov	r24, r18
 5f0:	76 2f       	mov	r23, r22
 5f2:	6a 2f       	mov	r22, r26
 5f4:	11 24       	eor	r1, r1
 5f6:	9f 57       	subi	r25, 0x7F	; 127
 5f8:	50 40       	sbci	r21, 0x00	; 0
 5fa:	9a f0       	brmi	.+38     	; 0x622 <__mulsf3_pse+0x88>
 5fc:	f1 f0       	breq	.+60     	; 0x63a <__mulsf3_pse+0xa0>
 5fe:	88 23       	and	r24, r24
 600:	4a f0       	brmi	.+18     	; 0x614 <__mulsf3_pse+0x7a>
 602:	ee 0f       	add	r30, r30
 604:	ff 1f       	adc	r31, r31
 606:	bb 1f       	adc	r27, r27
 608:	66 1f       	adc	r22, r22
 60a:	77 1f       	adc	r23, r23
 60c:	88 1f       	adc	r24, r24
 60e:	91 50       	subi	r25, 0x01	; 1
 610:	50 40       	sbci	r21, 0x00	; 0
 612:	a9 f7       	brne	.-22     	; 0x5fe <__mulsf3_pse+0x64>
 614:	9e 3f       	cpi	r25, 0xFE	; 254
 616:	51 05       	cpc	r21, r1
 618:	80 f0       	brcs	.+32     	; 0x63a <__mulsf3_pse+0xa0>
 61a:	0c 94 25 02 	jmp	0x44a	; 0x44a <__fp_inf>
 61e:	0c 94 b1 02 	jmp	0x562	; 0x562 <__fp_szero>
 622:	5f 3f       	cpi	r21, 0xFF	; 255
 624:	e4 f3       	brlt	.-8      	; 0x61e <__mulsf3_pse+0x84>
 626:	98 3e       	cpi	r25, 0xE8	; 232
 628:	d4 f3       	brlt	.-12     	; 0x61e <__mulsf3_pse+0x84>
 62a:	86 95       	lsr	r24
 62c:	77 95       	ror	r23
 62e:	67 95       	ror	r22
 630:	b7 95       	ror	r27
 632:	f7 95       	ror	r31
 634:	e7 95       	ror	r30
 636:	9f 5f       	subi	r25, 0xFF	; 255
 638:	c1 f7       	brne	.-16     	; 0x62a <__mulsf3_pse+0x90>
 63a:	fe 2b       	or	r31, r30
 63c:	88 0f       	add	r24, r24
 63e:	91 1d       	adc	r25, r1
 640:	96 95       	lsr	r25
 642:	87 95       	ror	r24
 644:	97 f9       	bld	r25, 7
 646:	08 95       	ret

00000648 <__itoa_ncheck>:
 648:	bb 27       	eor	r27, r27
 64a:	4a 30       	cpi	r20, 0x0A	; 10
 64c:	31 f4       	brne	.+12     	; 0x65a <__itoa_ncheck+0x12>
 64e:	99 23       	and	r25, r25
 650:	22 f4       	brpl	.+8      	; 0x65a <__itoa_ncheck+0x12>
 652:	bd e2       	ldi	r27, 0x2D	; 45
 654:	90 95       	com	r25
 656:	81 95       	neg	r24
 658:	9f 4f       	sbci	r25, 0xFF	; 255
 65a:	0c 94 30 03 	jmp	0x660	; 0x660 <__utoa_common>

0000065e <__utoa_ncheck>:
 65e:	bb 27       	eor	r27, r27

00000660 <__utoa_common>:
 660:	fb 01       	movw	r30, r22
 662:	55 27       	eor	r21, r21
 664:	aa 27       	eor	r26, r26
 666:	88 0f       	add	r24, r24
 668:	99 1f       	adc	r25, r25
 66a:	aa 1f       	adc	r26, r26
 66c:	a4 17       	cp	r26, r20
 66e:	10 f0       	brcs	.+4      	; 0x674 <__utoa_common+0x14>
 670:	a4 1b       	sub	r26, r20
 672:	83 95       	inc	r24
 674:	50 51       	subi	r21, 0x10	; 16
 676:	b9 f7       	brne	.-18     	; 0x666 <__utoa_common+0x6>
 678:	a0 5d       	subi	r26, 0xD0	; 208
 67a:	aa 33       	cpi	r26, 0x3A	; 58
 67c:	08 f0       	brcs	.+2      	; 0x680 <__utoa_common+0x20>
 67e:	a9 5d       	subi	r26, 0xD9	; 217
 680:	a1 93       	st	Z+, r26
 682:	00 97       	sbiw	r24, 0x00	; 0
 684:	79 f7       	brne	.-34     	; 0x664 <__utoa_common+0x4>
 686:	b1 11       	cpse	r27, r1
 688:	b1 93       	st	Z+, r27
 68a:	11 92       	st	Z+, r1
 68c:	cb 01       	movw	r24, r22
 68e:	0c 94 49 03 	jmp	0x692	; 0x692 <strrev>

00000692 <strrev>:
 692:	dc 01       	movw	r26, r24
 694:	fc 01       	movw	r30, r24
 696:	67 2f       	mov	r22, r23
 698:	71 91       	ld	r23, Z+
 69a:	77 23       	and	r23, r23
 69c:	e1 f7       	brne	.-8      	; 0x696 <strrev+0x4>
 69e:	32 97       	sbiw	r30, 0x02	; 2
 6a0:	04 c0       	rjmp	.+8      	; 0x6aa <strrev+0x18>
 6a2:	7c 91       	ld	r23, X
 6a4:	6d 93       	st	X+, r22
 6a6:	70 83       	st	Z, r23
 6a8:	62 91       	ld	r22, -Z
 6aa:	ae 17       	cp	r26, r30
 6ac:	bf 07       	cpc	r27, r31
 6ae:	c8 f3       	brcs	.-14     	; 0x6a2 <strrev+0x10>
 6b0:	08 95       	ret

000006b2 <_exit>:
 6b2:	f8 94       	cli

000006b4 <__stop_program>:
 6b4:	ff cf       	rjmp	.-2      	; 0x6b4 <__stop_program>
