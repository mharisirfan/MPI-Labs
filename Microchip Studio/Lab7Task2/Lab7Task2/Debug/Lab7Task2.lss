
Lab7Task2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000174  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  00800100  00800100  000001e8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000001e8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000218  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  00000258  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000006f9  00000000  00000000  00000290  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000663  00000000  00000000  00000989  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000255  00000000  00000000  00000fec  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000084  00000000  00000000  00001244  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003ae  00000000  00000000  000012c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000c5  00000000  00000000  00001676  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  0000173b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 48 00 	jmp	0x90	; 0x90 <__vector_1>
   8:	0c 94 82 00 	jmp	0x104	; 0x104 <__vector_2>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a3 30       	cpi	r26, 0x03	; 3
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 9a 00 	call	0x134	; 0x134 <main>
  88:	0c 94 b8 00 	jmp	0x170	; 0x170 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <__vector_1>:
 	 PORTC &=~(1<<PC2);
 	 PORTC|=(1<<PC3);

}
void delay()
{
  90:	1f 92       	push	r1
  92:	0f 92       	push	r0
  94:	0f b6       	in	r0, 0x3f	; 63
  96:	0f 92       	push	r0
  98:	11 24       	eor	r1, r1
  9a:	2f 93       	push	r18
  9c:	3f 93       	push	r19
  9e:	8f 93       	push	r24
  a0:	9f 93       	push	r25
  a2:	83 b1       	in	r24, 0x03	; 3
  a4:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <counter>
  a8:	88 b1       	in	r24, 0x08	; 8
  aa:	81 60       	ori	r24, 0x01	; 1
  ac:	88 b9       	out	0x08, r24	; 8
  ae:	88 b1       	in	r24, 0x08	; 8
  b0:	82 60       	ori	r24, 0x02	; 2
  b2:	88 b9       	out	0x08, r24	; 8
  b4:	88 b1       	in	r24, 0x08	; 8
  b6:	84 60       	ori	r24, 0x04	; 4
  b8:	88 b9       	out	0x08, r24	; 8
  ba:	88 b1       	in	r24, 0x08	; 8
  bc:	87 7f       	andi	r24, 0xF7	; 247
  be:	88 b9       	out	0x08, r24	; 8
  c0:	80 e0       	ldi	r24, 0x00	; 0
  c2:	94 e2       	ldi	r25, 0x24	; 36
  c4:	99 23       	and	r25, r25
  c6:	4c f0       	brlt	.+18     	; 0xda <__vector_1+0x4a>
  c8:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
  cc:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  d0:	21 30       	cpi	r18, 0x01	; 1
  d2:	31 05       	cpc	r19, r1
  d4:	11 f0       	breq	.+4      	; 0xda <__vector_1+0x4a>
  d6:	01 97       	sbiw	r24, 0x01	; 1
  d8:	f5 cf       	rjmp	.-22     	; 0xc4 <__vector_1+0x34>
  da:	88 b1       	in	r24, 0x08	; 8
  dc:	8e 7f       	andi	r24, 0xFE	; 254
  de:	88 b9       	out	0x08, r24	; 8
  e0:	88 b1       	in	r24, 0x08	; 8
  e2:	8d 7f       	andi	r24, 0xFD	; 253
  e4:	88 b9       	out	0x08, r24	; 8
  e6:	88 b1       	in	r24, 0x08	; 8
  e8:	8b 7f       	andi	r24, 0xFB	; 251
  ea:	88 b9       	out	0x08, r24	; 8
  ec:	88 b1       	in	r24, 0x08	; 8
  ee:	88 60       	ori	r24, 0x08	; 8
  f0:	88 b9       	out	0x08, r24	; 8
  f2:	9f 91       	pop	r25
  f4:	8f 91       	pop	r24
  f6:	3f 91       	pop	r19
  f8:	2f 91       	pop	r18
  fa:	0f 90       	pop	r0
  fc:	0f be       	out	0x3f, r0	; 63
  fe:	0f 90       	pop	r0
 100:	1f 90       	pop	r1
 102:	18 95       	reti

00000104 <__vector_2>:
 104:	1f 92       	push	r1
 106:	0f 92       	push	r0
 108:	0f b6       	in	r0, 0x3f	; 63
 10a:	0f 92       	push	r0
 10c:	11 24       	eor	r1, r1
 10e:	8f 93       	push	r24
 110:	88 b1       	in	r24, 0x08	; 8
 112:	8e 7f       	andi	r24, 0xFE	; 254
 114:	88 b9       	out	0x08, r24	; 8
 116:	88 b1       	in	r24, 0x08	; 8
 118:	8d 7f       	andi	r24, 0xFD	; 253
 11a:	88 b9       	out	0x08, r24	; 8
 11c:	88 b1       	in	r24, 0x08	; 8
 11e:	8b 7f       	andi	r24, 0xFB	; 251
 120:	88 b9       	out	0x08, r24	; 8
 122:	88 b1       	in	r24, 0x08	; 8
 124:	88 60       	ori	r24, 0x08	; 8
 126:	88 b9       	out	0x08, r24	; 8
 128:	8f 91       	pop	r24
 12a:	0f 90       	pop	r0
 12c:	0f be       	out	0x3f, r0	; 63
 12e:	0f 90       	pop	r0
 130:	1f 90       	pop	r1
 132:	18 95       	reti

00000134 <main>:
	}
}


int main(){
	DDRB= 0X00;
 134:	14 b8       	out	0x04, r1	; 4
	PORTB=0xFF;
 136:	8f ef       	ldi	r24, 0xFF	; 255
 138:	85 b9       	out	0x05, r24	; 5
	DDRC= 0xFF;
 13a:	87 b9       	out	0x07, r24	; 7
	counter=0;
 13c:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <counter>
	
	SREG |=(1<<7);
 140:	8f b7       	in	r24, 0x3f	; 63
 142:	80 68       	ori	r24, 0x80	; 128
 144:	8f bf       	out	0x3f, r24	; 63
	EIMSK|=(1<<INT0);
 146:	8d b3       	in	r24, 0x1d	; 29
 148:	81 60       	ori	r24, 0x01	; 1
 14a:	8d bb       	out	0x1d, r24	; 29
	interrupt_flag = 1;
 14c:	81 e0       	ldi	r24, 0x01	; 1
 14e:	90 e0       	ldi	r25, 0x00	; 0
 150:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 154:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	EIMSK|=(1<<INT1);
 158:	8d b3       	in	r24, 0x1d	; 29
 15a:	82 60       	ori	r24, 0x02	; 2
 15c:	8d bb       	out	0x1d, r24	; 29
	EICRA|= (1<<ISC01);
 15e:	e9 e6       	ldi	r30, 0x69	; 105
 160:	f0 e0       	ldi	r31, 0x00	; 0
 162:	80 81       	ld	r24, Z
 164:	82 60       	ori	r24, 0x02	; 2
 166:	80 83       	st	Z, r24
	EICRA|= (1<<ISC11);
 168:	80 81       	ld	r24, Z
 16a:	88 60       	ori	r24, 0x08	; 8
 16c:	80 83       	st	Z, r24
 16e:	ff cf       	rjmp	.-2      	; 0x16e <main+0x3a>

00000170 <_exit>:
 170:	f8 94       	cli

00000172 <__stop_program>:
 172:	ff cf       	rjmp	.-2      	; 0x172 <__stop_program>
