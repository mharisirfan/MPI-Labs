
Lab10.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000007c  00800100  00000dee  00000e82  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000dee  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000011  0080017c  0080017c  00000efe  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000efe  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000f30  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  00000f70  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e83  00000000  00000000  00001000  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000818  00000000  00000000  00001e83  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005c9  00000000  00000000  0000269b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001ec  00000000  00000000  00002c64  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000523  00000000  00000000  00002e50  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005db  00000000  00000000  00003373  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  0000394e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b1 00 	jmp	0x162	; 0x162 <__ctors_end>
   4:	0c 94 60 01 	jmp	0x2c0	; 0x2c0 <__vector_1>
   8:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
   c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  10:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  14:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  18:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  1c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  20:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  24:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  28:	0c 94 6d 02 	jmp	0x4da	; 0x4da <__vector_10>
  2c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  30:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  34:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  38:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  3c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  40:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  44:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  48:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  4c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  50:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  54:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  58:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  5c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  60:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  64:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	00 40       	sbci	r16, 0x00	; 0
  6a:	7a 10       	cpse	r7, r10
  6c:	f3 5a       	subi	r31, 0xA3	; 163
  6e:	00 a0       	ldd	r0, Z+32	; 0x20
  70:	72 4e       	sbci	r23, 0xE2	; 226
  72:	18 09       	sbc	r17, r8
  74:	00 10       	cpse	r0, r0
  76:	a5 d4       	rcall	.+2378   	; 0x9c2 <__stack+0xc3>
  78:	e8 00       	.word	0x00e8	; ????
  7a:	00 e8       	ldi	r16, 0x80	; 128
  7c:	76 48       	sbci	r23, 0x86	; 134
  7e:	17 00       	.word	0x0017	; ????
  80:	00 e4       	ldi	r16, 0x40	; 64
  82:	0b 54       	subi	r16, 0x4B	; 75
  84:	02 00       	.word	0x0002	; ????
  86:	00 ca       	rjmp	.-3072   	; 0xfffff488 <__eeprom_end+0xff7ef488>
  88:	9a 3b       	cpi	r25, 0xBA	; 186
  8a:	00 00       	nop
  8c:	00 e1       	ldi	r16, 0x10	; 16
  8e:	f5 05       	cpc	r31, r5
  90:	00 00       	nop
  92:	80 96       	adiw	r24, 0x20	; 32
  94:	98 00       	.word	0x0098	; ????
  96:	00 00       	nop
  98:	40 42       	sbci	r20, 0x20	; 32
  9a:	0f 00       	.word	0x000f	; ????
  9c:	00 00       	nop
  9e:	a0 86       	std	Z+8, r10	; 0x08
  a0:	01 00       	.word	0x0001	; ????
  a2:	00 00       	nop
  a4:	10 27       	eor	r17, r16
  a6:	00 00       	nop
  a8:	00 00       	nop
  aa:	e8 03       	fmulsu	r22, r16
  ac:	00 00       	nop
  ae:	00 00       	nop
  b0:	64 00       	.word	0x0064	; ????
  b2:	00 00       	nop
  b4:	00 00       	nop
  b6:	0a 00       	.word	0x000a	; ????
  b8:	00 00       	nop
  ba:	00 00       	nop
  bc:	01 00       	.word	0x0001	; ????
  be:	00 00       	nop
  c0:	00 00       	nop
  c2:	2c 76       	andi	r18, 0x6C	; 108
  c4:	d8 88       	ldd	r13, Y+16	; 0x10
  c6:	dc 67       	ori	r29, 0x7C	; 124
  c8:	4f 08       	sbc	r4, r15
  ca:	23 df       	rcall	.-442    	; 0xffffff12 <__eeprom_end+0xff7eff12>
  cc:	c1 df       	rcall	.-126    	; 0x50 <__SREG__+0x11>
  ce:	ae 59       	subi	r26, 0x9E	; 158
  d0:	e1 b1       	in	r30, 0x01	; 1
  d2:	b7 96       	adiw	r30, 0x27	; 39
  d4:	e5 e3       	ldi	r30, 0x35	; 53
  d6:	e4 53       	subi	r30, 0x34	; 52
  d8:	c6 3a       	cpi	r28, 0xA6	; 166
  da:	e6 51       	subi	r30, 0x16	; 22
  dc:	99 76       	andi	r25, 0x69	; 105
  de:	96 e8       	ldi	r25, 0x86	; 134
  e0:	e6 c2       	rjmp	.+1484   	; 0x6ae <__floatsisf+0x32>
  e2:	84 26       	eor	r8, r20
  e4:	eb 89       	ldd	r30, Y+19	; 0x13
  e6:	8c 9b       	sbis	0x11, 4	; 17
  e8:	62 ed       	ldi	r22, 0xD2	; 210
  ea:	40 7c       	andi	r20, 0xC0	; 192
  ec:	6f fc       	.word	0xfc6f	; ????
  ee:	ef bc       	out	0x2f, r14	; 47
  f0:	9c 9f       	mul	r25, r28
  f2:	40 f2       	brcs	.-112    	; 0x84 <__trampolines_end+0x1c>
  f4:	ba a5       	ldd	r27, Y+42	; 0x2a
  f6:	6f a5       	ldd	r22, Y+47	; 0x2f
  f8:	f4 90       	lpm	r15, Z
  fa:	05 5a       	subi	r16, 0xA5	; 165
  fc:	2a f7       	brpl	.-54     	; 0xc8 <__trampolines_end+0x60>
  fe:	5c 93       	st	X, r21
 100:	6b 6c       	ori	r22, 0xCB	; 203
 102:	f9 67       	ori	r31, 0x79	; 121
 104:	6d c1       	rjmp	.+730    	; 0x3e0 <main+0x56>
 106:	1b fc       	.word	0xfc1b	; ????
 108:	e0 e4       	ldi	r30, 0x40	; 64
 10a:	0d 47       	sbci	r16, 0x7D	; 125
 10c:	fe f5       	brtc	.+126    	; 0x18c <.do_clear_bss_loop>
 10e:	20 e6       	ldi	r18, 0x60	; 96
 110:	b5 00       	.word	0x00b5	; ????
 112:	d0 ed       	ldi	r29, 0xD0	; 208
 114:	90 2e       	mov	r9, r16
 116:	03 00       	.word	0x0003	; ????
 118:	94 35       	cpi	r25, 0x54	; 84
 11a:	77 05       	cpc	r23, r7
 11c:	00 80       	ld	r0, Z
 11e:	84 1e       	adc	r8, r20
 120:	08 00       	.word	0x0008	; ????
 122:	00 20       	and	r0, r0
 124:	4e 0a       	sbc	r4, r30
 126:	00 00       	nop
 128:	00 c8       	rjmp	.-4096   	; 0xfffff12a <__eeprom_end+0xff7ef12a>
 12a:	0c 33       	cpi	r16, 0x3C	; 60
 12c:	33 33       	cpi	r19, 0x33	; 51
 12e:	33 0f       	add	r19, r19
 130:	98 6e       	ori	r25, 0xE8	; 232
 132:	12 83       	std	Z+2, r17	; 0x02
 134:	11 41       	sbci	r17, 0x11	; 17
 136:	ef 8d       	ldd	r30, Y+31	; 0x1f
 138:	21 14       	cp	r2, r1
 13a:	89 3b       	cpi	r24, 0xB9	; 185
 13c:	e6 55       	subi	r30, 0x56	; 86
 13e:	16 cf       	rjmp	.-468    	; 0xffffff6c <__eeprom_end+0xff7eff6c>
 140:	fe e6       	ldi	r31, 0x6E	; 110
 142:	db 18       	sub	r13, r11
 144:	d1 84       	ldd	r13, Z+9	; 0x09
 146:	4b 38       	cpi	r20, 0x8B	; 139
 148:	1b f7       	brvc	.-58     	; 0x110 <__trampolines_end+0xa8>
 14a:	7c 1d       	adc	r23, r12
 14c:	90 1d       	adc	r25, r0
 14e:	a4 bb       	out	0x14, r26	; 20
 150:	e4 24       	eor	r14, r4
 152:	20 32       	cpi	r18, 0x20	; 32
 154:	84 72       	andi	r24, 0x24	; 36
 156:	5e 22       	and	r5, r30
 158:	81 00       	.word	0x0081	; ????
 15a:	c9 f1       	breq	.+114    	; 0x1ce <printSerialStr>
 15c:	24 ec       	ldi	r18, 0xC4	; 196
 15e:	a1 e5       	ldi	r26, 0x51	; 81
 160:	3d 27       	eor	r19, r29

00000162 <__ctors_end>:
 162:	11 24       	eor	r1, r1
 164:	1f be       	out	0x3f, r1	; 63
 166:	cf ef       	ldi	r28, 0xFF	; 255
 168:	d8 e0       	ldi	r29, 0x08	; 8
 16a:	de bf       	out	0x3e, r29	; 62
 16c:	cd bf       	out	0x3d, r28	; 61

0000016e <__do_copy_data>:
 16e:	11 e0       	ldi	r17, 0x01	; 1
 170:	a0 e0       	ldi	r26, 0x00	; 0
 172:	b1 e0       	ldi	r27, 0x01	; 1
 174:	ee ee       	ldi	r30, 0xEE	; 238
 176:	fd e0       	ldi	r31, 0x0D	; 13
 178:	02 c0       	rjmp	.+4      	; 0x17e <__do_copy_data+0x10>
 17a:	05 90       	lpm	r0, Z+
 17c:	0d 92       	st	X+, r0
 17e:	ac 37       	cpi	r26, 0x7C	; 124
 180:	b1 07       	cpc	r27, r17
 182:	d9 f7       	brne	.-10     	; 0x17a <__do_copy_data+0xc>

00000184 <__do_clear_bss>:
 184:	21 e0       	ldi	r18, 0x01	; 1
 186:	ac e7       	ldi	r26, 0x7C	; 124
 188:	b1 e0       	ldi	r27, 0x01	; 1
 18a:	01 c0       	rjmp	.+2      	; 0x18e <.do_clear_bss_start>

0000018c <.do_clear_bss_loop>:
 18c:	1d 92       	st	X+, r1

0000018e <.do_clear_bss_start>:
 18e:	ad 38       	cpi	r26, 0x8D	; 141
 190:	b2 07       	cpc	r27, r18
 192:	e1 f7       	brne	.-8      	; 0x18c <.do_clear_bss_loop>
 194:	0e 94 c5 01 	call	0x38a	; 0x38a <main>
 198:	0c 94 f5 06 	jmp	0xdea	; 0xdea <_exit>

0000019c <__bad_interrupt>:
 19c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a0 <UART0_init>:
    printSerialLong((long int) rising2);
	printSerialStrln("");

	printSerialStr("Falling 1:	");
	printSerialLong((long int) falling1);
	printSerialStrln("");
 1a0:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 1a4:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
 1a8:	e0 ec       	ldi	r30, 0xC0	; 192
 1aa:	f0 e0       	ldi	r31, 0x00	; 0
 1ac:	80 81       	ld	r24, Z
 1ae:	82 60       	ori	r24, 0x02	; 2
 1b0:	80 83       	st	Z, r24
 1b2:	88 e1       	ldi	r24, 0x18	; 24
 1b4:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
 1b8:	86 e0       	ldi	r24, 0x06	; 6
 1ba:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 1be:	08 95       	ret

000001c0 <UART0_send_char>:
 1c0:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 1c4:	95 ff       	sbrs	r25, 5
 1c6:	fc cf       	rjmp	.-8      	; 0x1c0 <UART0_send_char>
 1c8:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 1cc:	08 95       	ret

000001ce <printSerialStr>:
 1ce:	0f 93       	push	r16
 1d0:	1f 93       	push	r17
 1d2:	cf 93       	push	r28
 1d4:	df 93       	push	r29
 1d6:	8c 01       	movw	r16, r24
 1d8:	c0 e0       	ldi	r28, 0x00	; 0
 1da:	d0 e0       	ldi	r29, 0x00	; 0
 1dc:	03 c0       	rjmp	.+6      	; 0x1e4 <printSerialStr+0x16>
 1de:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <UART0_send_char>
 1e2:	21 96       	adiw	r28, 0x01	; 1
 1e4:	f8 01       	movw	r30, r16
 1e6:	ec 0f       	add	r30, r28
 1e8:	fd 1f       	adc	r31, r29
 1ea:	80 81       	ld	r24, Z
 1ec:	81 11       	cpse	r24, r1
 1ee:	f7 cf       	rjmp	.-18     	; 0x1de <printSerialStr+0x10>
 1f0:	df 91       	pop	r29
 1f2:	cf 91       	pop	r28
 1f4:	1f 91       	pop	r17
 1f6:	0f 91       	pop	r16
 1f8:	08 95       	ret

000001fa <printSerialStrln>:
 1fa:	0f 93       	push	r16
 1fc:	1f 93       	push	r17
 1fe:	cf 93       	push	r28
 200:	df 93       	push	r29
 202:	8c 01       	movw	r16, r24
 204:	c0 e0       	ldi	r28, 0x00	; 0
 206:	d0 e0       	ldi	r29, 0x00	; 0
 208:	03 c0       	rjmp	.+6      	; 0x210 <printSerialStrln+0x16>
 20a:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <UART0_send_char>
 20e:	21 96       	adiw	r28, 0x01	; 1
 210:	f8 01       	movw	r30, r16
 212:	ec 0f       	add	r30, r28
 214:	fd 1f       	adc	r31, r29
 216:	80 81       	ld	r24, Z
 218:	81 11       	cpse	r24, r1
 21a:	f7 cf       	rjmp	.-18     	; 0x20a <printSerialStrln+0x10>
 21c:	8d e0       	ldi	r24, 0x0D	; 13
 21e:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <UART0_send_char>
 222:	8a e0       	ldi	r24, 0x0A	; 10
 224:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <UART0_send_char>
 228:	df 91       	pop	r29
 22a:	cf 91       	pop	r28
 22c:	1f 91       	pop	r17
 22e:	0f 91       	pop	r16
 230:	08 95       	ret

00000232 <printSerialFloat>:
 232:	0f 93       	push	r16
 234:	1f 93       	push	r17
 236:	cf 93       	push	r28
 238:	df 93       	push	r29
 23a:	cd b7       	in	r28, 0x3d	; 61
 23c:	de b7       	in	r29, 0x3e	; 62
 23e:	2a 97       	sbiw	r28, 0x0a	; 10
 240:	0f b6       	in	r0, 0x3f	; 63
 242:	f8 94       	cli
 244:	de bf       	out	0x3e, r29	; 62
 246:	0f be       	out	0x3f, r0	; 63
 248:	cd bf       	out	0x3d, r28	; 61
 24a:	8e 01       	movw	r16, r28
 24c:	0f 5f       	subi	r16, 0xFF	; 255
 24e:	1f 4f       	sbci	r17, 0xFF	; 255
 250:	22 e0       	ldi	r18, 0x02	; 2
 252:	44 e0       	ldi	r20, 0x04	; 4
 254:	0e 94 37 04 	call	0x86e	; 0x86e <dtostrf>
 258:	0e 94 e7 00 	call	0x1ce	; 0x1ce <printSerialStr>
 25c:	2a 96       	adiw	r28, 0x0a	; 10
 25e:	0f b6       	in	r0, 0x3f	; 63
 260:	f8 94       	cli
 262:	de bf       	out	0x3e, r29	; 62
 264:	0f be       	out	0x3f, r0	; 63
 266:	cd bf       	out	0x3d, r28	; 61
 268:	df 91       	pop	r29
 26a:	cf 91       	pop	r28
 26c:	1f 91       	pop	r17
 26e:	0f 91       	pop	r16
 270:	08 95       	ret

00000272 <printSerialInt>:
 272:	cf 93       	push	r28
 274:	df 93       	push	r29
 276:	cd b7       	in	r28, 0x3d	; 61
 278:	de b7       	in	r29, 0x3e	; 62
 27a:	2a 97       	sbiw	r28, 0x0a	; 10
 27c:	0f b6       	in	r0, 0x3f	; 63
 27e:	f8 94       	cli
 280:	de bf       	out	0x3e, r29	; 62
 282:	0f be       	out	0x3f, r0	; 63
 284:	cd bf       	out	0x3d, r28	; 61
 286:	4a e0       	ldi	r20, 0x0A	; 10
 288:	be 01       	movw	r22, r28
 28a:	6f 5f       	subi	r22, 0xFF	; 255
 28c:	7f 4f       	sbci	r23, 0xFF	; 255
 28e:	0e 94 57 04 	call	0x8ae	; 0x8ae <__itoa_ncheck>
 292:	0e 94 e7 00 	call	0x1ce	; 0x1ce <printSerialStr>
 296:	2a 96       	adiw	r28, 0x0a	; 10
 298:	0f b6       	in	r0, 0x3f	; 63
 29a:	f8 94       	cli
 29c:	de bf       	out	0x3e, r29	; 62
 29e:	0f be       	out	0x3f, r0	; 63
 2a0:	cd bf       	out	0x3d, r28	; 61
 2a2:	df 91       	pop	r29
 2a4:	cf 91       	pop	r28
 2a6:	08 95       	ret

000002a8 <timer_init>:
 2a8:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
 2ac:	e1 e8       	ldi	r30, 0x81	; 129
 2ae:	f0 e0       	ldi	r31, 0x00	; 0
 2b0:	80 81       	ld	r24, Z
 2b2:	81 60       	ori	r24, 0x01	; 1
 2b4:	80 83       	st	Z, r24
 2b6:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
 2ba:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 2be:	08 95       	ret

000002c0 <__vector_1>:
 2c0:	1f 92       	push	r1
 2c2:	0f 92       	push	r0
 2c4:	0f b6       	in	r0, 0x3f	; 63
 2c6:	0f 92       	push	r0
 2c8:	11 24       	eor	r1, r1
 2ca:	8f 93       	push	r24
 2cc:	ef 93       	push	r30
 2ce:	ff 93       	push	r31
 2d0:	10 92 8a 01 	sts	0x018A, r1	; 0x80018a <rising1+0x1>
 2d4:	10 92 89 01 	sts	0x0189, r1	; 0x800189 <rising1>
 2d8:	10 92 88 01 	sts	0x0188, r1	; 0x800188 <rising2+0x1>
 2dc:	10 92 87 01 	sts	0x0187, r1	; 0x800187 <rising2>
 2e0:	10 92 86 01 	sts	0x0186, r1	; 0x800186 <falling1+0x1>
 2e4:	10 92 85 01 	sts	0x0185, r1	; 0x800185 <falling1>
 2e8:	10 92 84 01 	sts	0x0184, r1	; 0x800184 <capture_complete>
 2ec:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 2f0:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
 2f4:	10 92 8c 01 	sts	0x018C, r1	; 0x80018c <input_capt_counter+0x1>
 2f8:	10 92 8b 01 	sts	0x018B, r1	; 0x80018b <input_capt_counter>
 2fc:	10 92 80 01 	sts	0x0180, r1	; 0x800180 <sig_freq>
 300:	10 92 81 01 	sts	0x0181, r1	; 0x800181 <sig_freq+0x1>
 304:	10 92 82 01 	sts	0x0182, r1	; 0x800182 <sig_freq+0x2>
 308:	10 92 83 01 	sts	0x0183, r1	; 0x800183 <sig_freq+0x3>
 30c:	10 92 7c 01 	sts	0x017C, r1	; 0x80017c <__data_end>
 310:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <__data_end+0x1>
 314:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <__data_end+0x2>
 318:	10 92 7f 01 	sts	0x017F, r1	; 0x80017f <__data_end+0x3>
 31c:	e1 e8       	ldi	r30, 0x81	; 129
 31e:	f0 e0       	ldi	r31, 0x00	; 0
 320:	80 81       	ld	r24, Z
 322:	80 64       	ori	r24, 0x40	; 64
 324:	80 83       	st	Z, r24
 326:	ef e6       	ldi	r30, 0x6F	; 111
 328:	f0 e0       	ldi	r31, 0x00	; 0
 32a:	80 81       	ld	r24, Z
 32c:	80 62       	ori	r24, 0x20	; 32
 32e:	80 83       	st	Z, r24
 330:	ff 91       	pop	r31
 332:	ef 91       	pop	r30
 334:	8f 91       	pop	r24
 336:	0f 90       	pop	r0
 338:	0f be       	out	0x3f, r0	; 63
 33a:	0f 90       	pop	r0
 33c:	1f 90       	pop	r1
 33e:	18 95       	reti

00000340 <display_signal_parameters>:
/** Function to display the Frequency and Duty Cycle
of the Captured signal. This function requires the
LCD cursor to be at home location*/
void display_signal_parameters(void)
{
 	printSerialStr("Frequency = ");
 340:	82 e2       	ldi	r24, 0x22	; 34
 342:	91 e0       	ldi	r25, 0x01	; 1
 344:	0e 94 e7 00 	call	0x1ce	; 0x1ce <printSerialStr>
 	printSerialFloat(sig_freq);
 348:	60 91 80 01 	lds	r22, 0x0180	; 0x800180 <sig_freq>
 34c:	70 91 81 01 	lds	r23, 0x0181	; 0x800181 <sig_freq+0x1>
 350:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <sig_freq+0x2>
 354:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <sig_freq+0x3>
 358:	0e 94 19 01 	call	0x232	; 0x232 <printSerialFloat>
 	printSerialStrln(" Hz");
 35c:	8f e2       	ldi	r24, 0x2F	; 47
 35e:	91 e0       	ldi	r25, 0x01	; 1
 360:	0e 94 fd 00 	call	0x1fa	; 0x1fa <printSerialStrln>

 	printSerialStr("Duty Cycle = ");
 364:	83 e3       	ldi	r24, 0x33	; 51
 366:	91 e0       	ldi	r25, 0x01	; 1
 368:	0e 94 e7 00 	call	0x1ce	; 0x1ce <printSerialStr>
 	printSerialFloat(sig_dc);
 36c:	60 91 7c 01 	lds	r22, 0x017C	; 0x80017c <__data_end>
 370:	70 91 7d 01 	lds	r23, 0x017D	; 0x80017d <__data_end+0x1>
 374:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <__data_end+0x2>
 378:	90 91 7f 01 	lds	r25, 0x017F	; 0x80017f <__data_end+0x3>
 37c:	0e 94 19 01 	call	0x232	; 0x232 <printSerialFloat>
 	printSerialStrln(" %");
 380:	81 e4       	ldi	r24, 0x41	; 65
 382:	91 e0       	ldi	r25, 0x01	; 1
 384:	0e 94 fd 00 	call	0x1fa	; 0x1fa <printSerialStrln>
 388:	08 95       	ret

0000038a <main>:
// ***********************************************************
// Main program
//
int main(void)
{
	DDRB &= (1<<PB0); // Set PB0 (ICP1) for input
 38a:	84 b1       	in	r24, 0x04	; 4
 38c:	81 70       	andi	r24, 0x01	; 1
 38e:	84 b9       	out	0x04, r24	; 4
	PORTB|= (1<<PB0); // Activate internal pull-up
 390:	85 b1       	in	r24, 0x05	; 5
 392:	81 60       	ori	r24, 0x01	; 1
 394:	85 b9       	out	0x05, r24	; 5
	
	
	UART0_init(MYUBRR);
 396:	81 e2       	ldi	r24, 0x21	; 33
 398:	90 e0       	ldi	r25, 0x00	; 0
 39a:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <UART0_init>
	printSerialInt(MYUBRR);
 39e:	81 e2       	ldi	r24, 0x21	; 33
 3a0:	90 e0       	ldi	r25, 0x00	; 0
 3a2:	0e 94 39 01 	call	0x272	; 0x272 <printSerialInt>
	printSerialStrln("");
 3a6:	81 e2       	ldi	r24, 0x21	; 33
 3a8:	91 e0       	ldi	r25, 0x01	; 1
 3aa:	0e 94 fd 00 	call	0x1fa	; 0x1fa <printSerialStrln>
	printSerialStr("F_CPU = ");
 3ae:	84 e4       	ldi	r24, 0x44	; 68
 3b0:	91 e0       	ldi	r25, 0x01	; 1
 3b2:	0e 94 e7 00 	call	0x1ce	; 0x1ce <printSerialStr>
	printSerialInt((int)(F_CPU/1000000));
 3b6:	80 e1       	ldi	r24, 0x10	; 16
 3b8:	90 e0       	ldi	r25, 0x00	; 0
 3ba:	0e 94 39 01 	call	0x272	; 0x272 <printSerialInt>
	printSerialStrln("MHz");
 3be:	8d e4       	ldi	r24, 0x4D	; 77
 3c0:	91 e0       	ldi	r25, 0x01	; 1
 3c2:	0e 94 fd 00 	call	0x1fa	; 0x1fa <printSerialStrln>
	printSerialStrln("Lab 10: Input Capture");
 3c6:	81 e5       	ldi	r24, 0x51	; 81
 3c8:	91 e0       	ldi	r25, 0x01	; 1
 3ca:	0e 94 fd 00 	call	0x1fa	; 0x1fa <printSerialStrln>
	timer_init();
 3ce:	0e 94 54 01 	call	0x2a8	; 0x2a8 <timer_init>
	
	//******* Write Code For This ********//
	EICRA|=(1<<ISC01); 		// Set interrupt sense control bits to falling edge for INT0
 3d2:	e9 e6       	ldi	r30, 0x69	; 105
 3d4:	f0 e0       	ldi	r31, 0x00	; 0
 3d6:	80 81       	ld	r24, Z
 3d8:	82 60       	ori	r24, 0x02	; 2
 3da:	80 83       	st	Z, r24
	EIMSK|=(1<<INT0);	// Enable INT0 locally
 3dc:	8d b3       	in	r24, 0x1d	; 29
 3de:	81 60       	ori	r24, 0x01	; 1
 3e0:	8d bb       	out	0x1d, r24	; 29

	GLB_INTR_EN;	// Enable interrupts globally
 3e2:	78 94       	sei
	int i=0;
	
	while(1)
   {
    	if(capture_complete == TRUE)
 3e4:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <capture_complete>
 3e8:	81 30       	cpi	r24, 0x01	; 1
 3ea:	e1 f7       	brne	.-8      	; 0x3e4 <main+0x5a>
    	{
    	 	
    	 	display_signal_parameters();	// display frequency and duty cycle on LCD
 3ec:	0e 94 a0 01 	call	0x340	; 0x340 <display_signal_parameters>
    	 	capture_complete = FALSE;
 3f0:	10 92 84 01 	sts	0x0184, r1	; 0x800184 <capture_complete>
			
    	 	for(i=0; i<8; i++)	// wait for 2 seconds
 3f4:	80 e0       	ldi	r24, 0x00	; 0
 3f6:	90 e0       	ldi	r25, 0x00	; 0
 3f8:	0a c0       	rjmp	.+20     	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3fa:	2f ef       	ldi	r18, 0xFF	; 255
 3fc:	34 e3       	ldi	r19, 0x34	; 52
 3fe:	4c e0       	ldi	r20, 0x0C	; 12
 400:	21 50       	subi	r18, 0x01	; 1
 402:	30 40       	sbci	r19, 0x00	; 0
 404:	40 40       	sbci	r20, 0x00	; 0
 406:	e1 f7       	brne	.-8      	; 0x400 <__EEPROM_REGION_LENGTH__>
 408:	00 c0       	rjmp	.+0      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 40a:	00 00       	nop
 40c:	01 96       	adiw	r24, 0x01	; 1
 40e:	88 30       	cpi	r24, 0x08	; 8
 410:	91 05       	cpc	r25, r1
 412:	9c f3       	brlt	.-26     	; 0x3fa <main+0x70>
    	 	_delay_ms(250);
    	 	
			printSerialStrln("Press the button ..");
 414:	87 e6       	ldi	r24, 0x67	; 103
 416:	91 e0       	ldi	r25, 0x01	; 1
 418:	0e 94 fd 00 	call	0x1fa	; 0x1fa <printSerialStrln>
 41c:	e3 cf       	rjmp	.-58     	; 0x3e4 <main+0x5a>

0000041e <calculate_signal_param>:
are captured and saved in global variables 'rising1',
'rising2', and 'falling1'. It calculates the input signal
frequency and its duty cycle and saves them in corresponding
variables.*/
void calculate_signal_param(void)
{
 41e:	cf 92       	push	r12
 420:	df 92       	push	r13
 422:	ef 92       	push	r14
 424:	ff 92       	push	r15
 426:	cf 93       	push	r28
 428:	df 93       	push	r29
	if((rising2-rising1) != 0) // if denominator is non-zero
 42a:	c0 91 87 01 	lds	r28, 0x0187	; 0x800187 <rising2>
 42e:	d0 91 88 01 	lds	r29, 0x0188	; 0x800188 <rising2+0x1>
 432:	80 91 89 01 	lds	r24, 0x0189	; 0x800189 <rising1>
 436:	90 91 8a 01 	lds	r25, 0x018A	; 0x80018a <rising1+0x1>
 43a:	c8 17       	cp	r28, r24
 43c:	d9 07       	cpc	r29, r25
 43e:	b1 f1       	breq	.+108    	; 0x4ac <calculate_signal_param+0x8e>
	{
		sig_freq = F_CPU/((float)(rising2-rising1)); 	// Here Prescalar = 1 so Ftimer == F_CPU
 440:	be 01       	movw	r22, r28
 442:	68 1b       	sub	r22, r24
 444:	79 0b       	sbc	r23, r25
 446:	80 e0       	ldi	r24, 0x00	; 0
 448:	90 e0       	ldi	r25, 0x00	; 0
 44a:	0e 94 3c 03 	call	0x678	; 0x678 <__floatunsisf>
 44e:	6b 01       	movw	r12, r22
 450:	7c 01       	movw	r14, r24
 452:	9b 01       	movw	r18, r22
 454:	ac 01       	movw	r20, r24
 456:	60 e0       	ldi	r22, 0x00	; 0
 458:	74 e2       	ldi	r23, 0x24	; 36
 45a:	84 e7       	ldi	r24, 0x74	; 116
 45c:	9b e4       	ldi	r25, 0x4B	; 75
 45e:	0e 94 ca 02 	call	0x594	; 0x594 <__divsf3>
 462:	60 93 80 01 	sts	0x0180, r22	; 0x800180 <sig_freq>
 466:	70 93 81 01 	sts	0x0181, r23	; 0x800181 <sig_freq+0x1>
 46a:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <sig_freq+0x2>
 46e:	90 93 83 01 	sts	0x0183, r25	; 0x800183 <sig_freq+0x3>
		sig_dc = 100.0 * ((float)(falling1 - rising2))/((float)(rising2-rising1)); // ON-Time/ Total Time * 100 %
 472:	60 91 85 01 	lds	r22, 0x0185	; 0x800185 <falling1>
 476:	70 91 86 01 	lds	r23, 0x0186	; 0x800186 <falling1+0x1>
 47a:	6c 1b       	sub	r22, r28
 47c:	7d 0b       	sbc	r23, r29
 47e:	80 e0       	ldi	r24, 0x00	; 0
 480:	90 e0       	ldi	r25, 0x00	; 0
 482:	0e 94 3c 03 	call	0x678	; 0x678 <__floatunsisf>
 486:	20 e0       	ldi	r18, 0x00	; 0
 488:	30 e0       	ldi	r19, 0x00	; 0
 48a:	48 ec       	ldi	r20, 0xC8	; 200
 48c:	52 e4       	ldi	r21, 0x42	; 66
 48e:	0e 94 ca 03 	call	0x794	; 0x794 <__mulsf3>
 492:	a7 01       	movw	r20, r14
 494:	96 01       	movw	r18, r12
 496:	0e 94 ca 02 	call	0x594	; 0x594 <__divsf3>
 49a:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <__data_end>
 49e:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <__data_end+0x1>
 4a2:	80 93 7e 01 	sts	0x017E, r24	; 0x80017e <__data_end+0x2>
 4a6:	90 93 7f 01 	sts	0x017F, r25	; 0x80017f <__data_end+0x3>
 4aa:	10 c0       	rjmp	.+32     	; 0x4cc <calculate_signal_param+0xae>
	}
	else
	{
	 	sig_freq = 0;
 4ac:	10 92 80 01 	sts	0x0180, r1	; 0x800180 <sig_freq>
 4b0:	10 92 81 01 	sts	0x0181, r1	; 0x800181 <sig_freq+0x1>
 4b4:	10 92 82 01 	sts	0x0182, r1	; 0x800182 <sig_freq+0x2>
 4b8:	10 92 83 01 	sts	0x0183, r1	; 0x800183 <sig_freq+0x3>
	 	sig_dc = 0;	
 4bc:	10 92 7c 01 	sts	0x017C, r1	; 0x80017c <__data_end>
 4c0:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <__data_end+0x1>
 4c4:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <__data_end+0x2>
 4c8:	10 92 7f 01 	sts	0x017F, r1	; 0x80017f <__data_end+0x3>
	}
}
 4cc:	df 91       	pop	r29
 4ce:	cf 91       	pop	r28
 4d0:	ff 90       	pop	r15
 4d2:	ef 90       	pop	r14
 4d4:	df 90       	pop	r13
 4d6:	cf 90       	pop	r12
 4d8:	08 95       	ret

000004da <__vector_10>:


/* 	ISR for Input Capture of Timer1. You need to write 
	code and complete this function*/
ISR(TIMER1_CAPT_vect)
{
 4da:	1f 92       	push	r1
 4dc:	0f 92       	push	r0
 4de:	0f b6       	in	r0, 0x3f	; 63
 4e0:	0f 92       	push	r0
 4e2:	11 24       	eor	r1, r1
 4e4:	2f 93       	push	r18
 4e6:	3f 93       	push	r19
 4e8:	4f 93       	push	r20
 4ea:	5f 93       	push	r21
 4ec:	6f 93       	push	r22
 4ee:	7f 93       	push	r23
 4f0:	8f 93       	push	r24
 4f2:	9f 93       	push	r25
 4f4:	af 93       	push	r26
 4f6:	bf 93       	push	r27
 4f8:	ef 93       	push	r30
 4fa:	ff 93       	push	r31

	input_capt_counter ++;
 4fc:	80 91 8b 01 	lds	r24, 0x018B	; 0x80018b <input_capt_counter>
 500:	90 91 8c 01 	lds	r25, 0x018C	; 0x80018c <input_capt_counter+0x1>
 504:	01 96       	adiw	r24, 0x01	; 1
 506:	90 93 8c 01 	sts	0x018C, r25	; 0x80018c <input_capt_counter+0x1>
 50a:	80 93 8b 01 	sts	0x018B, r24	; 0x80018b <input_capt_counter>
	if(input_capt_counter == 2) //write and complete the code
 50e:	82 30       	cpi	r24, 0x02	; 2
 510:	91 05       	cpc	r25, r1
 512:	41 f4       	brne	.+16     	; 0x524 <__vector_10+0x4a>
	{
			rising1=ICR1;// Record the counter value on first rising edge in 'rising1'
 514:	20 91 86 00 	lds	r18, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
 518:	30 91 87 00 	lds	r19, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
 51c:	30 93 8a 01 	sts	0x018A, r19	; 0x80018a <rising1+0x1>
 520:	20 93 89 01 	sts	0x0189, r18	; 0x800189 <rising1>
	}
	if(input_capt_counter == 3)	//write and complete the code
 524:	03 97       	sbiw	r24, 0x03	; 3
 526:	69 f4       	brne	.+26     	; 0x542 <__vector_10+0x68>
	{
		rising2=ICR1;	// Record the counter value on second rising edge in 'rising2'
 528:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
 52c:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
 530:	90 93 88 01 	sts	0x0188, r25	; 0x800188 <rising2+0x1>
 534:	80 93 87 01 	sts	0x0187, r24	; 0x800187 <rising2>
		TCCR1B &= ~(1<<ICES1); // Change the polarity of sensing
 538:	e1 e8       	ldi	r30, 0x81	; 129
 53a:	f0 e0       	ldi	r31, 0x00	; 0
 53c:	80 81       	ld	r24, Z
 53e:	8f 7b       	andi	r24, 0xBF	; 191
 540:	80 83       	st	Z, r24
			
	}
	if(input_capt_counter == 4) //write and complete the code
 542:	80 91 8b 01 	lds	r24, 0x018B	; 0x80018b <input_capt_counter>
 546:	90 91 8c 01 	lds	r25, 0x018C	; 0x80018c <input_capt_counter+0x1>
 54a:	04 97       	sbiw	r24, 0x04	; 4
 54c:	91 f4       	brne	.+36     	; 0x572 <__vector_10+0x98>
	{
		falling1=ICR1;	// Record the counter value on next falling edge in 'falling1'
 54e:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
 552:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
 556:	90 93 86 01 	sts	0x0186, r25	; 0x800186 <falling1+0x1>
 55a:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <falling1>
		TIMSK1&=~(1<<ICIE1);		// disable further interrupts of Timer 1 input capture
 55e:	ef e6       	ldi	r30, 0x6F	; 111
 560:	f0 e0       	ldi	r31, 0x00	; 0
 562:	80 81       	ld	r24, Z
 564:	8f 7d       	andi	r24, 0xDF	; 223
 566:	80 83       	st	Z, r24
		capture_complete = TRUE;	// capture is complete at this point
 568:	81 e0       	ldi	r24, 0x01	; 1
 56a:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <capture_complete>
		calculate_signal_param();  // calculate the Frequency and Duty Cycle of the Input Signal
 56e:	0e 94 0f 02 	call	0x41e	; 0x41e <calculate_signal_param>
	}
	
}
 572:	ff 91       	pop	r31
 574:	ef 91       	pop	r30
 576:	bf 91       	pop	r27
 578:	af 91       	pop	r26
 57a:	9f 91       	pop	r25
 57c:	8f 91       	pop	r24
 57e:	7f 91       	pop	r23
 580:	6f 91       	pop	r22
 582:	5f 91       	pop	r21
 584:	4f 91       	pop	r20
 586:	3f 91       	pop	r19
 588:	2f 91       	pop	r18
 58a:	0f 90       	pop	r0
 58c:	0f be       	out	0x3f, r0	; 63
 58e:	0f 90       	pop	r0
 590:	1f 90       	pop	r1
 592:	18 95       	reti

00000594 <__divsf3>:
 594:	0e 94 de 02 	call	0x5bc	; 0x5bc <__divsf3x>
 598:	0c 94 90 03 	jmp	0x720	; 0x720 <__fp_round>
 59c:	0e 94 89 03 	call	0x712	; 0x712 <__fp_pscB>
 5a0:	58 f0       	brcs	.+22     	; 0x5b8 <__divsf3+0x24>
 5a2:	0e 94 82 03 	call	0x704	; 0x704 <__fp_pscA>
 5a6:	40 f0       	brcs	.+16     	; 0x5b8 <__divsf3+0x24>
 5a8:	29 f4       	brne	.+10     	; 0x5b4 <__divsf3+0x20>
 5aa:	5f 3f       	cpi	r21, 0xFF	; 255
 5ac:	29 f0       	breq	.+10     	; 0x5b8 <__divsf3+0x24>
 5ae:	0c 94 79 03 	jmp	0x6f2	; 0x6f2 <__fp_inf>
 5b2:	51 11       	cpse	r21, r1
 5b4:	0c 94 c4 03 	jmp	0x788	; 0x788 <__fp_szero>
 5b8:	0c 94 7f 03 	jmp	0x6fe	; 0x6fe <__fp_nan>

000005bc <__divsf3x>:
 5bc:	0e 94 a1 03 	call	0x742	; 0x742 <__fp_split3>
 5c0:	68 f3       	brcs	.-38     	; 0x59c <__divsf3+0x8>

000005c2 <__divsf3_pse>:
 5c2:	99 23       	and	r25, r25
 5c4:	b1 f3       	breq	.-20     	; 0x5b2 <__divsf3+0x1e>
 5c6:	55 23       	and	r21, r21
 5c8:	91 f3       	breq	.-28     	; 0x5ae <__divsf3+0x1a>
 5ca:	95 1b       	sub	r25, r21
 5cc:	55 0b       	sbc	r21, r21
 5ce:	bb 27       	eor	r27, r27
 5d0:	aa 27       	eor	r26, r26
 5d2:	62 17       	cp	r22, r18
 5d4:	73 07       	cpc	r23, r19
 5d6:	84 07       	cpc	r24, r20
 5d8:	38 f0       	brcs	.+14     	; 0x5e8 <__divsf3_pse+0x26>
 5da:	9f 5f       	subi	r25, 0xFF	; 255
 5dc:	5f 4f       	sbci	r21, 0xFF	; 255
 5de:	22 0f       	add	r18, r18
 5e0:	33 1f       	adc	r19, r19
 5e2:	44 1f       	adc	r20, r20
 5e4:	aa 1f       	adc	r26, r26
 5e6:	a9 f3       	breq	.-22     	; 0x5d2 <__divsf3_pse+0x10>
 5e8:	35 d0       	rcall	.+106    	; 0x654 <__divsf3_pse+0x92>
 5ea:	0e 2e       	mov	r0, r30
 5ec:	3a f0       	brmi	.+14     	; 0x5fc <__divsf3_pse+0x3a>
 5ee:	e0 e8       	ldi	r30, 0x80	; 128
 5f0:	32 d0       	rcall	.+100    	; 0x656 <__divsf3_pse+0x94>
 5f2:	91 50       	subi	r25, 0x01	; 1
 5f4:	50 40       	sbci	r21, 0x00	; 0
 5f6:	e6 95       	lsr	r30
 5f8:	00 1c       	adc	r0, r0
 5fa:	ca f7       	brpl	.-14     	; 0x5ee <__divsf3_pse+0x2c>
 5fc:	2b d0       	rcall	.+86     	; 0x654 <__divsf3_pse+0x92>
 5fe:	fe 2f       	mov	r31, r30
 600:	29 d0       	rcall	.+82     	; 0x654 <__divsf3_pse+0x92>
 602:	66 0f       	add	r22, r22
 604:	77 1f       	adc	r23, r23
 606:	88 1f       	adc	r24, r24
 608:	bb 1f       	adc	r27, r27
 60a:	26 17       	cp	r18, r22
 60c:	37 07       	cpc	r19, r23
 60e:	48 07       	cpc	r20, r24
 610:	ab 07       	cpc	r26, r27
 612:	b0 e8       	ldi	r27, 0x80	; 128
 614:	09 f0       	breq	.+2      	; 0x618 <__divsf3_pse+0x56>
 616:	bb 0b       	sbc	r27, r27
 618:	80 2d       	mov	r24, r0
 61a:	bf 01       	movw	r22, r30
 61c:	ff 27       	eor	r31, r31
 61e:	93 58       	subi	r25, 0x83	; 131
 620:	5f 4f       	sbci	r21, 0xFF	; 255
 622:	3a f0       	brmi	.+14     	; 0x632 <__divsf3_pse+0x70>
 624:	9e 3f       	cpi	r25, 0xFE	; 254
 626:	51 05       	cpc	r21, r1
 628:	78 f0       	brcs	.+30     	; 0x648 <__divsf3_pse+0x86>
 62a:	0c 94 79 03 	jmp	0x6f2	; 0x6f2 <__fp_inf>
 62e:	0c 94 c4 03 	jmp	0x788	; 0x788 <__fp_szero>
 632:	5f 3f       	cpi	r21, 0xFF	; 255
 634:	e4 f3       	brlt	.-8      	; 0x62e <__divsf3_pse+0x6c>
 636:	98 3e       	cpi	r25, 0xE8	; 232
 638:	d4 f3       	brlt	.-12     	; 0x62e <__divsf3_pse+0x6c>
 63a:	86 95       	lsr	r24
 63c:	77 95       	ror	r23
 63e:	67 95       	ror	r22
 640:	b7 95       	ror	r27
 642:	f7 95       	ror	r31
 644:	9f 5f       	subi	r25, 0xFF	; 255
 646:	c9 f7       	brne	.-14     	; 0x63a <__divsf3_pse+0x78>
 648:	88 0f       	add	r24, r24
 64a:	91 1d       	adc	r25, r1
 64c:	96 95       	lsr	r25
 64e:	87 95       	ror	r24
 650:	97 f9       	bld	r25, 7
 652:	08 95       	ret
 654:	e1 e0       	ldi	r30, 0x01	; 1
 656:	66 0f       	add	r22, r22
 658:	77 1f       	adc	r23, r23
 65a:	88 1f       	adc	r24, r24
 65c:	bb 1f       	adc	r27, r27
 65e:	62 17       	cp	r22, r18
 660:	73 07       	cpc	r23, r19
 662:	84 07       	cpc	r24, r20
 664:	ba 07       	cpc	r27, r26
 666:	20 f0       	brcs	.+8      	; 0x670 <__divsf3_pse+0xae>
 668:	62 1b       	sub	r22, r18
 66a:	73 0b       	sbc	r23, r19
 66c:	84 0b       	sbc	r24, r20
 66e:	ba 0b       	sbc	r27, r26
 670:	ee 1f       	adc	r30, r30
 672:	88 f7       	brcc	.-30     	; 0x656 <__divsf3_pse+0x94>
 674:	e0 95       	com	r30
 676:	08 95       	ret

00000678 <__floatunsisf>:
 678:	e8 94       	clt
 67a:	09 c0       	rjmp	.+18     	; 0x68e <__floatsisf+0x12>

0000067c <__floatsisf>:
 67c:	97 fb       	bst	r25, 7
 67e:	3e f4       	brtc	.+14     	; 0x68e <__floatsisf+0x12>
 680:	90 95       	com	r25
 682:	80 95       	com	r24
 684:	70 95       	com	r23
 686:	61 95       	neg	r22
 688:	7f 4f       	sbci	r23, 0xFF	; 255
 68a:	8f 4f       	sbci	r24, 0xFF	; 255
 68c:	9f 4f       	sbci	r25, 0xFF	; 255
 68e:	99 23       	and	r25, r25
 690:	a9 f0       	breq	.+42     	; 0x6bc <__floatsisf+0x40>
 692:	f9 2f       	mov	r31, r25
 694:	96 e9       	ldi	r25, 0x96	; 150
 696:	bb 27       	eor	r27, r27
 698:	93 95       	inc	r25
 69a:	f6 95       	lsr	r31
 69c:	87 95       	ror	r24
 69e:	77 95       	ror	r23
 6a0:	67 95       	ror	r22
 6a2:	b7 95       	ror	r27
 6a4:	f1 11       	cpse	r31, r1
 6a6:	f8 cf       	rjmp	.-16     	; 0x698 <__floatsisf+0x1c>
 6a8:	fa f4       	brpl	.+62     	; 0x6e8 <__floatsisf+0x6c>
 6aa:	bb 0f       	add	r27, r27
 6ac:	11 f4       	brne	.+4      	; 0x6b2 <__floatsisf+0x36>
 6ae:	60 ff       	sbrs	r22, 0
 6b0:	1b c0       	rjmp	.+54     	; 0x6e8 <__floatsisf+0x6c>
 6b2:	6f 5f       	subi	r22, 0xFF	; 255
 6b4:	7f 4f       	sbci	r23, 0xFF	; 255
 6b6:	8f 4f       	sbci	r24, 0xFF	; 255
 6b8:	9f 4f       	sbci	r25, 0xFF	; 255
 6ba:	16 c0       	rjmp	.+44     	; 0x6e8 <__floatsisf+0x6c>
 6bc:	88 23       	and	r24, r24
 6be:	11 f0       	breq	.+4      	; 0x6c4 <__floatsisf+0x48>
 6c0:	96 e9       	ldi	r25, 0x96	; 150
 6c2:	11 c0       	rjmp	.+34     	; 0x6e6 <__floatsisf+0x6a>
 6c4:	77 23       	and	r23, r23
 6c6:	21 f0       	breq	.+8      	; 0x6d0 <__floatsisf+0x54>
 6c8:	9e e8       	ldi	r25, 0x8E	; 142
 6ca:	87 2f       	mov	r24, r23
 6cc:	76 2f       	mov	r23, r22
 6ce:	05 c0       	rjmp	.+10     	; 0x6da <__floatsisf+0x5e>
 6d0:	66 23       	and	r22, r22
 6d2:	71 f0       	breq	.+28     	; 0x6f0 <__floatsisf+0x74>
 6d4:	96 e8       	ldi	r25, 0x86	; 134
 6d6:	86 2f       	mov	r24, r22
 6d8:	70 e0       	ldi	r23, 0x00	; 0
 6da:	60 e0       	ldi	r22, 0x00	; 0
 6dc:	2a f0       	brmi	.+10     	; 0x6e8 <__floatsisf+0x6c>
 6de:	9a 95       	dec	r25
 6e0:	66 0f       	add	r22, r22
 6e2:	77 1f       	adc	r23, r23
 6e4:	88 1f       	adc	r24, r24
 6e6:	da f7       	brpl	.-10     	; 0x6de <__floatsisf+0x62>
 6e8:	88 0f       	add	r24, r24
 6ea:	96 95       	lsr	r25
 6ec:	87 95       	ror	r24
 6ee:	97 f9       	bld	r25, 7
 6f0:	08 95       	ret

000006f2 <__fp_inf>:
 6f2:	97 f9       	bld	r25, 7
 6f4:	9f 67       	ori	r25, 0x7F	; 127
 6f6:	80 e8       	ldi	r24, 0x80	; 128
 6f8:	70 e0       	ldi	r23, 0x00	; 0
 6fa:	60 e0       	ldi	r22, 0x00	; 0
 6fc:	08 95       	ret

000006fe <__fp_nan>:
 6fe:	9f ef       	ldi	r25, 0xFF	; 255
 700:	80 ec       	ldi	r24, 0xC0	; 192
 702:	08 95       	ret

00000704 <__fp_pscA>:
 704:	00 24       	eor	r0, r0
 706:	0a 94       	dec	r0
 708:	16 16       	cp	r1, r22
 70a:	17 06       	cpc	r1, r23
 70c:	18 06       	cpc	r1, r24
 70e:	09 06       	cpc	r0, r25
 710:	08 95       	ret

00000712 <__fp_pscB>:
 712:	00 24       	eor	r0, r0
 714:	0a 94       	dec	r0
 716:	12 16       	cp	r1, r18
 718:	13 06       	cpc	r1, r19
 71a:	14 06       	cpc	r1, r20
 71c:	05 06       	cpc	r0, r21
 71e:	08 95       	ret

00000720 <__fp_round>:
 720:	09 2e       	mov	r0, r25
 722:	03 94       	inc	r0
 724:	00 0c       	add	r0, r0
 726:	11 f4       	brne	.+4      	; 0x72c <__fp_round+0xc>
 728:	88 23       	and	r24, r24
 72a:	52 f0       	brmi	.+20     	; 0x740 <__fp_round+0x20>
 72c:	bb 0f       	add	r27, r27
 72e:	40 f4       	brcc	.+16     	; 0x740 <__fp_round+0x20>
 730:	bf 2b       	or	r27, r31
 732:	11 f4       	brne	.+4      	; 0x738 <__fp_round+0x18>
 734:	60 ff       	sbrs	r22, 0
 736:	04 c0       	rjmp	.+8      	; 0x740 <__fp_round+0x20>
 738:	6f 5f       	subi	r22, 0xFF	; 255
 73a:	7f 4f       	sbci	r23, 0xFF	; 255
 73c:	8f 4f       	sbci	r24, 0xFF	; 255
 73e:	9f 4f       	sbci	r25, 0xFF	; 255
 740:	08 95       	ret

00000742 <__fp_split3>:
 742:	57 fd       	sbrc	r21, 7
 744:	90 58       	subi	r25, 0x80	; 128
 746:	44 0f       	add	r20, r20
 748:	55 1f       	adc	r21, r21
 74a:	59 f0       	breq	.+22     	; 0x762 <__fp_splitA+0x10>
 74c:	5f 3f       	cpi	r21, 0xFF	; 255
 74e:	71 f0       	breq	.+28     	; 0x76c <__fp_splitA+0x1a>
 750:	47 95       	ror	r20

00000752 <__fp_splitA>:
 752:	88 0f       	add	r24, r24
 754:	97 fb       	bst	r25, 7
 756:	99 1f       	adc	r25, r25
 758:	61 f0       	breq	.+24     	; 0x772 <__fp_splitA+0x20>
 75a:	9f 3f       	cpi	r25, 0xFF	; 255
 75c:	79 f0       	breq	.+30     	; 0x77c <__fp_splitA+0x2a>
 75e:	87 95       	ror	r24
 760:	08 95       	ret
 762:	12 16       	cp	r1, r18
 764:	13 06       	cpc	r1, r19
 766:	14 06       	cpc	r1, r20
 768:	55 1f       	adc	r21, r21
 76a:	f2 cf       	rjmp	.-28     	; 0x750 <__fp_split3+0xe>
 76c:	46 95       	lsr	r20
 76e:	f1 df       	rcall	.-30     	; 0x752 <__fp_splitA>
 770:	08 c0       	rjmp	.+16     	; 0x782 <__fp_splitA+0x30>
 772:	16 16       	cp	r1, r22
 774:	17 06       	cpc	r1, r23
 776:	18 06       	cpc	r1, r24
 778:	99 1f       	adc	r25, r25
 77a:	f1 cf       	rjmp	.-30     	; 0x75e <__fp_splitA+0xc>
 77c:	86 95       	lsr	r24
 77e:	71 05       	cpc	r23, r1
 780:	61 05       	cpc	r22, r1
 782:	08 94       	sec
 784:	08 95       	ret

00000786 <__fp_zero>:
 786:	e8 94       	clt

00000788 <__fp_szero>:
 788:	bb 27       	eor	r27, r27
 78a:	66 27       	eor	r22, r22
 78c:	77 27       	eor	r23, r23
 78e:	cb 01       	movw	r24, r22
 790:	97 f9       	bld	r25, 7
 792:	08 95       	ret

00000794 <__mulsf3>:
 794:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__mulsf3x>
 798:	0c 94 90 03 	jmp	0x720	; 0x720 <__fp_round>
 79c:	0e 94 82 03 	call	0x704	; 0x704 <__fp_pscA>
 7a0:	38 f0       	brcs	.+14     	; 0x7b0 <__mulsf3+0x1c>
 7a2:	0e 94 89 03 	call	0x712	; 0x712 <__fp_pscB>
 7a6:	20 f0       	brcs	.+8      	; 0x7b0 <__mulsf3+0x1c>
 7a8:	95 23       	and	r25, r21
 7aa:	11 f0       	breq	.+4      	; 0x7b0 <__mulsf3+0x1c>
 7ac:	0c 94 79 03 	jmp	0x6f2	; 0x6f2 <__fp_inf>
 7b0:	0c 94 7f 03 	jmp	0x6fe	; 0x6fe <__fp_nan>
 7b4:	11 24       	eor	r1, r1
 7b6:	0c 94 c4 03 	jmp	0x788	; 0x788 <__fp_szero>

000007ba <__mulsf3x>:
 7ba:	0e 94 a1 03 	call	0x742	; 0x742 <__fp_split3>
 7be:	70 f3       	brcs	.-36     	; 0x79c <__mulsf3+0x8>

000007c0 <__mulsf3_pse>:
 7c0:	95 9f       	mul	r25, r21
 7c2:	c1 f3       	breq	.-16     	; 0x7b4 <__mulsf3+0x20>
 7c4:	95 0f       	add	r25, r21
 7c6:	50 e0       	ldi	r21, 0x00	; 0
 7c8:	55 1f       	adc	r21, r21
 7ca:	62 9f       	mul	r22, r18
 7cc:	f0 01       	movw	r30, r0
 7ce:	72 9f       	mul	r23, r18
 7d0:	bb 27       	eor	r27, r27
 7d2:	f0 0d       	add	r31, r0
 7d4:	b1 1d       	adc	r27, r1
 7d6:	63 9f       	mul	r22, r19
 7d8:	aa 27       	eor	r26, r26
 7da:	f0 0d       	add	r31, r0
 7dc:	b1 1d       	adc	r27, r1
 7de:	aa 1f       	adc	r26, r26
 7e0:	64 9f       	mul	r22, r20
 7e2:	66 27       	eor	r22, r22
 7e4:	b0 0d       	add	r27, r0
 7e6:	a1 1d       	adc	r26, r1
 7e8:	66 1f       	adc	r22, r22
 7ea:	82 9f       	mul	r24, r18
 7ec:	22 27       	eor	r18, r18
 7ee:	b0 0d       	add	r27, r0
 7f0:	a1 1d       	adc	r26, r1
 7f2:	62 1f       	adc	r22, r18
 7f4:	73 9f       	mul	r23, r19
 7f6:	b0 0d       	add	r27, r0
 7f8:	a1 1d       	adc	r26, r1
 7fa:	62 1f       	adc	r22, r18
 7fc:	83 9f       	mul	r24, r19
 7fe:	a0 0d       	add	r26, r0
 800:	61 1d       	adc	r22, r1
 802:	22 1f       	adc	r18, r18
 804:	74 9f       	mul	r23, r20
 806:	33 27       	eor	r19, r19
 808:	a0 0d       	add	r26, r0
 80a:	61 1d       	adc	r22, r1
 80c:	23 1f       	adc	r18, r19
 80e:	84 9f       	mul	r24, r20
 810:	60 0d       	add	r22, r0
 812:	21 1d       	adc	r18, r1
 814:	82 2f       	mov	r24, r18
 816:	76 2f       	mov	r23, r22
 818:	6a 2f       	mov	r22, r26
 81a:	11 24       	eor	r1, r1
 81c:	9f 57       	subi	r25, 0x7F	; 127
 81e:	50 40       	sbci	r21, 0x00	; 0
 820:	9a f0       	brmi	.+38     	; 0x848 <__DATA_REGION_LENGTH__+0x48>
 822:	f1 f0       	breq	.+60     	; 0x860 <__DATA_REGION_LENGTH__+0x60>
 824:	88 23       	and	r24, r24
 826:	4a f0       	brmi	.+18     	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
 828:	ee 0f       	add	r30, r30
 82a:	ff 1f       	adc	r31, r31
 82c:	bb 1f       	adc	r27, r27
 82e:	66 1f       	adc	r22, r22
 830:	77 1f       	adc	r23, r23
 832:	88 1f       	adc	r24, r24
 834:	91 50       	subi	r25, 0x01	; 1
 836:	50 40       	sbci	r21, 0x00	; 0
 838:	a9 f7       	brne	.-22     	; 0x824 <__DATA_REGION_LENGTH__+0x24>
 83a:	9e 3f       	cpi	r25, 0xFE	; 254
 83c:	51 05       	cpc	r21, r1
 83e:	80 f0       	brcs	.+32     	; 0x860 <__DATA_REGION_LENGTH__+0x60>
 840:	0c 94 79 03 	jmp	0x6f2	; 0x6f2 <__fp_inf>
 844:	0c 94 c4 03 	jmp	0x788	; 0x788 <__fp_szero>
 848:	5f 3f       	cpi	r21, 0xFF	; 255
 84a:	e4 f3       	brlt	.-8      	; 0x844 <__DATA_REGION_LENGTH__+0x44>
 84c:	98 3e       	cpi	r25, 0xE8	; 232
 84e:	d4 f3       	brlt	.-12     	; 0x844 <__DATA_REGION_LENGTH__+0x44>
 850:	86 95       	lsr	r24
 852:	77 95       	ror	r23
 854:	67 95       	ror	r22
 856:	b7 95       	ror	r27
 858:	f7 95       	ror	r31
 85a:	e7 95       	ror	r30
 85c:	9f 5f       	subi	r25, 0xFF	; 255
 85e:	c1 f7       	brne	.-16     	; 0x850 <__DATA_REGION_LENGTH__+0x50>
 860:	fe 2b       	or	r31, r30
 862:	88 0f       	add	r24, r24
 864:	91 1d       	adc	r25, r1
 866:	96 95       	lsr	r25
 868:	87 95       	ror	r24
 86a:	97 f9       	bld	r25, 7
 86c:	08 95       	ret

0000086e <dtostrf>:
 86e:	ef 92       	push	r14
 870:	0f 93       	push	r16
 872:	1f 93       	push	r17
 874:	cf 93       	push	r28
 876:	df 93       	push	r29
 878:	e8 01       	movw	r28, r16
 87a:	47 fd       	sbrc	r20, 7
 87c:	02 c0       	rjmp	.+4      	; 0x882 <dtostrf+0x14>
 87e:	34 e0       	ldi	r19, 0x04	; 4
 880:	01 c0       	rjmp	.+2      	; 0x884 <dtostrf+0x16>
 882:	34 e1       	ldi	r19, 0x14	; 20
 884:	04 2e       	mov	r0, r20
 886:	00 0c       	add	r0, r0
 888:	55 0b       	sbc	r21, r21
 88a:	57 ff       	sbrs	r21, 7
 88c:	03 c0       	rjmp	.+6      	; 0x894 <dtostrf+0x26>
 88e:	51 95       	neg	r21
 890:	41 95       	neg	r20
 892:	51 09       	sbc	r21, r1
 894:	e3 2e       	mov	r14, r19
 896:	02 2f       	mov	r16, r18
 898:	24 2f       	mov	r18, r20
 89a:	ae 01       	movw	r20, r28
 89c:	0e 94 7c 04 	call	0x8f8	; 0x8f8 <dtoa_prf>
 8a0:	ce 01       	movw	r24, r28
 8a2:	df 91       	pop	r29
 8a4:	cf 91       	pop	r28
 8a6:	1f 91       	pop	r17
 8a8:	0f 91       	pop	r16
 8aa:	ef 90       	pop	r14
 8ac:	08 95       	ret

000008ae <__itoa_ncheck>:
 8ae:	bb 27       	eor	r27, r27
 8b0:	4a 30       	cpi	r20, 0x0A	; 10
 8b2:	31 f4       	brne	.+12     	; 0x8c0 <__itoa_ncheck+0x12>
 8b4:	99 23       	and	r25, r25
 8b6:	22 f4       	brpl	.+8      	; 0x8c0 <__itoa_ncheck+0x12>
 8b8:	bd e2       	ldi	r27, 0x2D	; 45
 8ba:	90 95       	com	r25
 8bc:	81 95       	neg	r24
 8be:	9f 4f       	sbci	r25, 0xFF	; 255
 8c0:	0c 94 63 04 	jmp	0x8c6	; 0x8c6 <__utoa_common>

000008c4 <__utoa_ncheck>:
 8c4:	bb 27       	eor	r27, r27

000008c6 <__utoa_common>:
 8c6:	fb 01       	movw	r30, r22
 8c8:	55 27       	eor	r21, r21
 8ca:	aa 27       	eor	r26, r26
 8cc:	88 0f       	add	r24, r24
 8ce:	99 1f       	adc	r25, r25
 8d0:	aa 1f       	adc	r26, r26
 8d2:	a4 17       	cp	r26, r20
 8d4:	10 f0       	brcs	.+4      	; 0x8da <__utoa_common+0x14>
 8d6:	a4 1b       	sub	r26, r20
 8d8:	83 95       	inc	r24
 8da:	50 51       	subi	r21, 0x10	; 16
 8dc:	b9 f7       	brne	.-18     	; 0x8cc <__utoa_common+0x6>
 8de:	a0 5d       	subi	r26, 0xD0	; 208
 8e0:	aa 33       	cpi	r26, 0x3A	; 58
 8e2:	08 f0       	brcs	.+2      	; 0x8e6 <__utoa_common+0x20>
 8e4:	a9 5d       	subi	r26, 0xD9	; 217
 8e6:	a1 93       	st	Z+, r26
 8e8:	00 97       	sbiw	r24, 0x00	; 0
 8ea:	79 f7       	brne	.-34     	; 0x8ca <__utoa_common+0x4>
 8ec:	b1 11       	cpse	r27, r1
 8ee:	b1 93       	st	Z+, r27
 8f0:	11 92       	st	Z+, r1
 8f2:	cb 01       	movw	r24, r22
 8f4:	0c 94 ae 06 	jmp	0xd5c	; 0xd5c <strrev>

000008f8 <dtoa_prf>:
 8f8:	a9 e0       	ldi	r26, 0x09	; 9
 8fa:	b0 e0       	ldi	r27, 0x00	; 0
 8fc:	e2 e8       	ldi	r30, 0x82	; 130
 8fe:	f4 e0       	ldi	r31, 0x04	; 4
 900:	0c 94 c4 06 	jmp	0xd88	; 0xd88 <__prologue_saves__+0xc>
 904:	6a 01       	movw	r12, r20
 906:	12 2f       	mov	r17, r18
 908:	b0 2e       	mov	r11, r16
 90a:	2b e3       	ldi	r18, 0x3B	; 59
 90c:	20 17       	cp	r18, r16
 90e:	20 f0       	brcs	.+8      	; 0x918 <__stack+0x19>
 910:	ff 24       	eor	r15, r15
 912:	f3 94       	inc	r15
 914:	f0 0e       	add	r15, r16
 916:	02 c0       	rjmp	.+4      	; 0x91c <__stack+0x1d>
 918:	2c e3       	ldi	r18, 0x3C	; 60
 91a:	f2 2e       	mov	r15, r18
 91c:	0f 2d       	mov	r16, r15
 91e:	27 e0       	ldi	r18, 0x07	; 7
 920:	ae 01       	movw	r20, r28
 922:	4f 5f       	subi	r20, 0xFF	; 255
 924:	5f 4f       	sbci	r21, 0xFF	; 255
 926:	0e 94 d6 05 	call	0xbac	; 0xbac <__ftoa_engine>
 92a:	bc 01       	movw	r22, r24
 92c:	49 81       	ldd	r20, Y+1	; 0x01
 92e:	84 2f       	mov	r24, r20
 930:	89 70       	andi	r24, 0x09	; 9
 932:	81 30       	cpi	r24, 0x01	; 1
 934:	31 f0       	breq	.+12     	; 0x942 <__stack+0x43>
 936:	e1 fc       	sbrc	r14, 1
 938:	06 c0       	rjmp	.+12     	; 0x946 <__stack+0x47>
 93a:	e0 fe       	sbrs	r14, 0
 93c:	06 c0       	rjmp	.+12     	; 0x94a <__stack+0x4b>
 93e:	90 e2       	ldi	r25, 0x20	; 32
 940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0x4d>
 942:	9d e2       	ldi	r25, 0x2D	; 45
 944:	03 c0       	rjmp	.+6      	; 0x94c <__stack+0x4d>
 946:	9b e2       	ldi	r25, 0x2B	; 43
 948:	01 c0       	rjmp	.+2      	; 0x94c <__stack+0x4d>
 94a:	90 e0       	ldi	r25, 0x00	; 0
 94c:	5e 2d       	mov	r21, r14
 94e:	50 71       	andi	r21, 0x10	; 16
 950:	43 ff       	sbrs	r20, 3
 952:	3c c0       	rjmp	.+120    	; 0x9cc <__stack+0xcd>
 954:	91 11       	cpse	r25, r1
 956:	02 c0       	rjmp	.+4      	; 0x95c <__stack+0x5d>
 958:	83 e0       	ldi	r24, 0x03	; 3
 95a:	01 c0       	rjmp	.+2      	; 0x95e <__stack+0x5f>
 95c:	84 e0       	ldi	r24, 0x04	; 4
 95e:	81 17       	cp	r24, r17
 960:	18 f4       	brcc	.+6      	; 0x968 <__stack+0x69>
 962:	21 2f       	mov	r18, r17
 964:	28 1b       	sub	r18, r24
 966:	01 c0       	rjmp	.+2      	; 0x96a <__stack+0x6b>
 968:	20 e0       	ldi	r18, 0x00	; 0
 96a:	51 11       	cpse	r21, r1
 96c:	0b c0       	rjmp	.+22     	; 0x984 <__stack+0x85>
 96e:	f6 01       	movw	r30, r12
 970:	82 2f       	mov	r24, r18
 972:	30 e2       	ldi	r19, 0x20	; 32
 974:	88 23       	and	r24, r24
 976:	19 f0       	breq	.+6      	; 0x97e <__stack+0x7f>
 978:	31 93       	st	Z+, r19
 97a:	81 50       	subi	r24, 0x01	; 1
 97c:	fb cf       	rjmp	.-10     	; 0x974 <__stack+0x75>
 97e:	c2 0e       	add	r12, r18
 980:	d1 1c       	adc	r13, r1
 982:	20 e0       	ldi	r18, 0x00	; 0
 984:	99 23       	and	r25, r25
 986:	29 f0       	breq	.+10     	; 0x992 <__stack+0x93>
 988:	d6 01       	movw	r26, r12
 98a:	9c 93       	st	X, r25
 98c:	f6 01       	movw	r30, r12
 98e:	31 96       	adiw	r30, 0x01	; 1
 990:	6f 01       	movw	r12, r30
 992:	c6 01       	movw	r24, r12
 994:	03 96       	adiw	r24, 0x03	; 3
 996:	e2 fe       	sbrs	r14, 2
 998:	0a c0       	rjmp	.+20     	; 0x9ae <__stack+0xaf>
 99a:	3e e4       	ldi	r19, 0x4E	; 78
 99c:	d6 01       	movw	r26, r12
 99e:	3c 93       	st	X, r19
 9a0:	41 e4       	ldi	r20, 0x41	; 65
 9a2:	11 96       	adiw	r26, 0x01	; 1
 9a4:	4c 93       	st	X, r20
 9a6:	11 97       	sbiw	r26, 0x01	; 1
 9a8:	12 96       	adiw	r26, 0x02	; 2
 9aa:	3c 93       	st	X, r19
 9ac:	06 c0       	rjmp	.+12     	; 0x9ba <__stack+0xbb>
 9ae:	3e e6       	ldi	r19, 0x6E	; 110
 9b0:	f6 01       	movw	r30, r12
 9b2:	30 83       	st	Z, r19
 9b4:	41 e6       	ldi	r20, 0x61	; 97
 9b6:	41 83       	std	Z+1, r20	; 0x01
 9b8:	32 83       	std	Z+2, r19	; 0x02
 9ba:	fc 01       	movw	r30, r24
 9bc:	32 2f       	mov	r19, r18
 9be:	40 e2       	ldi	r20, 0x20	; 32
 9c0:	33 23       	and	r19, r19
 9c2:	09 f4       	brne	.+2      	; 0x9c6 <__stack+0xc7>
 9c4:	42 c0       	rjmp	.+132    	; 0xa4a <__stack+0x14b>
 9c6:	41 93       	st	Z+, r20
 9c8:	31 50       	subi	r19, 0x01	; 1
 9ca:	fa cf       	rjmp	.-12     	; 0x9c0 <__stack+0xc1>
 9cc:	42 ff       	sbrs	r20, 2
 9ce:	44 c0       	rjmp	.+136    	; 0xa58 <__stack+0x159>
 9d0:	91 11       	cpse	r25, r1
 9d2:	02 c0       	rjmp	.+4      	; 0x9d8 <__stack+0xd9>
 9d4:	83 e0       	ldi	r24, 0x03	; 3
 9d6:	01 c0       	rjmp	.+2      	; 0x9da <__stack+0xdb>
 9d8:	84 e0       	ldi	r24, 0x04	; 4
 9da:	81 17       	cp	r24, r17
 9dc:	18 f4       	brcc	.+6      	; 0x9e4 <__stack+0xe5>
 9de:	21 2f       	mov	r18, r17
 9e0:	28 1b       	sub	r18, r24
 9e2:	01 c0       	rjmp	.+2      	; 0x9e6 <__stack+0xe7>
 9e4:	20 e0       	ldi	r18, 0x00	; 0
 9e6:	51 11       	cpse	r21, r1
 9e8:	0b c0       	rjmp	.+22     	; 0xa00 <__stack+0x101>
 9ea:	f6 01       	movw	r30, r12
 9ec:	82 2f       	mov	r24, r18
 9ee:	30 e2       	ldi	r19, 0x20	; 32
 9f0:	88 23       	and	r24, r24
 9f2:	19 f0       	breq	.+6      	; 0x9fa <__stack+0xfb>
 9f4:	31 93       	st	Z+, r19
 9f6:	81 50       	subi	r24, 0x01	; 1
 9f8:	fb cf       	rjmp	.-10     	; 0x9f0 <__stack+0xf1>
 9fa:	c2 0e       	add	r12, r18
 9fc:	d1 1c       	adc	r13, r1
 9fe:	20 e0       	ldi	r18, 0x00	; 0
 a00:	99 23       	and	r25, r25
 a02:	29 f0       	breq	.+10     	; 0xa0e <__stack+0x10f>
 a04:	d6 01       	movw	r26, r12
 a06:	9c 93       	st	X, r25
 a08:	f6 01       	movw	r30, r12
 a0a:	31 96       	adiw	r30, 0x01	; 1
 a0c:	6f 01       	movw	r12, r30
 a0e:	c6 01       	movw	r24, r12
 a10:	03 96       	adiw	r24, 0x03	; 3
 a12:	e2 fe       	sbrs	r14, 2
 a14:	0b c0       	rjmp	.+22     	; 0xa2c <__stack+0x12d>
 a16:	39 e4       	ldi	r19, 0x49	; 73
 a18:	d6 01       	movw	r26, r12
 a1a:	3c 93       	st	X, r19
 a1c:	3e e4       	ldi	r19, 0x4E	; 78
 a1e:	11 96       	adiw	r26, 0x01	; 1
 a20:	3c 93       	st	X, r19
 a22:	11 97       	sbiw	r26, 0x01	; 1
 a24:	36 e4       	ldi	r19, 0x46	; 70
 a26:	12 96       	adiw	r26, 0x02	; 2
 a28:	3c 93       	st	X, r19
 a2a:	07 c0       	rjmp	.+14     	; 0xa3a <__stack+0x13b>
 a2c:	39 e6       	ldi	r19, 0x69	; 105
 a2e:	f6 01       	movw	r30, r12
 a30:	30 83       	st	Z, r19
 a32:	3e e6       	ldi	r19, 0x6E	; 110
 a34:	31 83       	std	Z+1, r19	; 0x01
 a36:	36 e6       	ldi	r19, 0x66	; 102
 a38:	32 83       	std	Z+2, r19	; 0x02
 a3a:	fc 01       	movw	r30, r24
 a3c:	32 2f       	mov	r19, r18
 a3e:	40 e2       	ldi	r20, 0x20	; 32
 a40:	33 23       	and	r19, r19
 a42:	19 f0       	breq	.+6      	; 0xa4a <__stack+0x14b>
 a44:	41 93       	st	Z+, r20
 a46:	31 50       	subi	r19, 0x01	; 1
 a48:	fb cf       	rjmp	.-10     	; 0xa40 <__stack+0x141>
 a4a:	fc 01       	movw	r30, r24
 a4c:	e2 0f       	add	r30, r18
 a4e:	f1 1d       	adc	r31, r1
 a50:	10 82       	st	Z, r1
 a52:	8e ef       	ldi	r24, 0xFE	; 254
 a54:	9f ef       	ldi	r25, 0xFF	; 255
 a56:	a6 c0       	rjmp	.+332    	; 0xba4 <__stack+0x2a5>
 a58:	21 e0       	ldi	r18, 0x01	; 1
 a5a:	30 e0       	ldi	r19, 0x00	; 0
 a5c:	91 11       	cpse	r25, r1
 a5e:	02 c0       	rjmp	.+4      	; 0xa64 <__stack+0x165>
 a60:	20 e0       	ldi	r18, 0x00	; 0
 a62:	30 e0       	ldi	r19, 0x00	; 0
 a64:	16 16       	cp	r1, r22
 a66:	17 06       	cpc	r1, r23
 a68:	1c f4       	brge	.+6      	; 0xa70 <__stack+0x171>
 a6a:	fb 01       	movw	r30, r22
 a6c:	31 96       	adiw	r30, 0x01	; 1
 a6e:	02 c0       	rjmp	.+4      	; 0xa74 <__stack+0x175>
 a70:	e1 e0       	ldi	r30, 0x01	; 1
 a72:	f0 e0       	ldi	r31, 0x00	; 0
 a74:	2e 0f       	add	r18, r30
 a76:	3f 1f       	adc	r19, r31
 a78:	bb 20       	and	r11, r11
 a7a:	21 f0       	breq	.+8      	; 0xa84 <__stack+0x185>
 a7c:	eb 2d       	mov	r30, r11
 a7e:	f0 e0       	ldi	r31, 0x00	; 0
 a80:	31 96       	adiw	r30, 0x01	; 1
 a82:	02 c0       	rjmp	.+4      	; 0xa88 <__stack+0x189>
 a84:	e0 e0       	ldi	r30, 0x00	; 0
 a86:	f0 e0       	ldi	r31, 0x00	; 0
 a88:	2e 0f       	add	r18, r30
 a8a:	3f 1f       	adc	r19, r31
 a8c:	e1 2f       	mov	r30, r17
 a8e:	f0 e0       	ldi	r31, 0x00	; 0
 a90:	2e 17       	cp	r18, r30
 a92:	3f 07       	cpc	r19, r31
 a94:	1c f4       	brge	.+6      	; 0xa9c <__stack+0x19d>
 a96:	12 1b       	sub	r17, r18
 a98:	21 2f       	mov	r18, r17
 a9a:	01 c0       	rjmp	.+2      	; 0xa9e <__stack+0x19f>
 a9c:	20 e0       	ldi	r18, 0x00	; 0
 a9e:	8e 2d       	mov	r24, r14
 aa0:	88 71       	andi	r24, 0x18	; 24
 aa2:	59 f4       	brne	.+22     	; 0xaba <__stack+0x1bb>
 aa4:	f6 01       	movw	r30, r12
 aa6:	82 2f       	mov	r24, r18
 aa8:	30 e2       	ldi	r19, 0x20	; 32
 aaa:	88 23       	and	r24, r24
 aac:	19 f0       	breq	.+6      	; 0xab4 <__stack+0x1b5>
 aae:	31 93       	st	Z+, r19
 ab0:	81 50       	subi	r24, 0x01	; 1
 ab2:	fb cf       	rjmp	.-10     	; 0xaaa <__stack+0x1ab>
 ab4:	c2 0e       	add	r12, r18
 ab6:	d1 1c       	adc	r13, r1
 ab8:	20 e0       	ldi	r18, 0x00	; 0
 aba:	99 23       	and	r25, r25
 abc:	29 f0       	breq	.+10     	; 0xac8 <__stack+0x1c9>
 abe:	d6 01       	movw	r26, r12
 ac0:	9c 93       	st	X, r25
 ac2:	f6 01       	movw	r30, r12
 ac4:	31 96       	adiw	r30, 0x01	; 1
 ac6:	6f 01       	movw	r12, r30
 ac8:	51 11       	cpse	r21, r1
 aca:	0b c0       	rjmp	.+22     	; 0xae2 <__stack+0x1e3>
 acc:	f6 01       	movw	r30, r12
 ace:	82 2f       	mov	r24, r18
 ad0:	90 e3       	ldi	r25, 0x30	; 48
 ad2:	88 23       	and	r24, r24
 ad4:	19 f0       	breq	.+6      	; 0xadc <__stack+0x1dd>
 ad6:	91 93       	st	Z+, r25
 ad8:	81 50       	subi	r24, 0x01	; 1
 ada:	fb cf       	rjmp	.-10     	; 0xad2 <__stack+0x1d3>
 adc:	c2 0e       	add	r12, r18
 ade:	d1 1c       	adc	r13, r1
 ae0:	20 e0       	ldi	r18, 0x00	; 0
 ae2:	0f 2d       	mov	r16, r15
 ae4:	06 0f       	add	r16, r22
 ae6:	9a 81       	ldd	r25, Y+2	; 0x02
 ae8:	34 2f       	mov	r19, r20
 aea:	30 71       	andi	r19, 0x10	; 16
 aec:	44 ff       	sbrs	r20, 4
 aee:	03 c0       	rjmp	.+6      	; 0xaf6 <__stack+0x1f7>
 af0:	91 33       	cpi	r25, 0x31	; 49
 af2:	09 f4       	brne	.+2      	; 0xaf6 <__stack+0x1f7>
 af4:	01 50       	subi	r16, 0x01	; 1
 af6:	10 16       	cp	r1, r16
 af8:	24 f4       	brge	.+8      	; 0xb02 <__stack+0x203>
 afa:	09 30       	cpi	r16, 0x09	; 9
 afc:	18 f0       	brcs	.+6      	; 0xb04 <__stack+0x205>
 afe:	08 e0       	ldi	r16, 0x08	; 8
 b00:	01 c0       	rjmp	.+2      	; 0xb04 <__stack+0x205>
 b02:	01 e0       	ldi	r16, 0x01	; 1
 b04:	ab 01       	movw	r20, r22
 b06:	77 ff       	sbrs	r23, 7
 b08:	02 c0       	rjmp	.+4      	; 0xb0e <__stack+0x20f>
 b0a:	40 e0       	ldi	r20, 0x00	; 0
 b0c:	50 e0       	ldi	r21, 0x00	; 0
 b0e:	fb 01       	movw	r30, r22
 b10:	e4 1b       	sub	r30, r20
 b12:	f5 0b       	sbc	r31, r21
 b14:	a1 e0       	ldi	r26, 0x01	; 1
 b16:	b0 e0       	ldi	r27, 0x00	; 0
 b18:	ac 0f       	add	r26, r28
 b1a:	bd 1f       	adc	r27, r29
 b1c:	ea 0f       	add	r30, r26
 b1e:	fb 1f       	adc	r31, r27
 b20:	8e e2       	ldi	r24, 0x2E	; 46
 b22:	a8 2e       	mov	r10, r24
 b24:	4b 01       	movw	r8, r22
 b26:	80 1a       	sub	r8, r16
 b28:	91 08       	sbc	r9, r1
 b2a:	0b 2d       	mov	r16, r11
 b2c:	10 e0       	ldi	r17, 0x00	; 0
 b2e:	11 95       	neg	r17
 b30:	01 95       	neg	r16
 b32:	11 09       	sbc	r17, r1
 b34:	4f 3f       	cpi	r20, 0xFF	; 255
 b36:	bf ef       	ldi	r27, 0xFF	; 255
 b38:	5b 07       	cpc	r21, r27
 b3a:	21 f4       	brne	.+8      	; 0xb44 <__stack+0x245>
 b3c:	d6 01       	movw	r26, r12
 b3e:	ac 92       	st	X, r10
 b40:	11 96       	adiw	r26, 0x01	; 1
 b42:	6d 01       	movw	r12, r26
 b44:	64 17       	cp	r22, r20
 b46:	75 07       	cpc	r23, r21
 b48:	2c f0       	brlt	.+10     	; 0xb54 <__stack+0x255>
 b4a:	84 16       	cp	r8, r20
 b4c:	95 06       	cpc	r9, r21
 b4e:	14 f4       	brge	.+4      	; 0xb54 <__stack+0x255>
 b50:	81 81       	ldd	r24, Z+1	; 0x01
 b52:	01 c0       	rjmp	.+2      	; 0xb56 <__stack+0x257>
 b54:	80 e3       	ldi	r24, 0x30	; 48
 b56:	41 50       	subi	r20, 0x01	; 1
 b58:	51 09       	sbc	r21, r1
 b5a:	31 96       	adiw	r30, 0x01	; 1
 b5c:	d6 01       	movw	r26, r12
 b5e:	11 96       	adiw	r26, 0x01	; 1
 b60:	7d 01       	movw	r14, r26
 b62:	40 17       	cp	r20, r16
 b64:	51 07       	cpc	r21, r17
 b66:	24 f0       	brlt	.+8      	; 0xb70 <__stack+0x271>
 b68:	d6 01       	movw	r26, r12
 b6a:	8c 93       	st	X, r24
 b6c:	67 01       	movw	r12, r14
 b6e:	e2 cf       	rjmp	.-60     	; 0xb34 <__stack+0x235>
 b70:	64 17       	cp	r22, r20
 b72:	75 07       	cpc	r23, r21
 b74:	39 f4       	brne	.+14     	; 0xb84 <__stack+0x285>
 b76:	96 33       	cpi	r25, 0x36	; 54
 b78:	20 f4       	brcc	.+8      	; 0xb82 <__stack+0x283>
 b7a:	95 33       	cpi	r25, 0x35	; 53
 b7c:	19 f4       	brne	.+6      	; 0xb84 <__stack+0x285>
 b7e:	31 11       	cpse	r19, r1
 b80:	01 c0       	rjmp	.+2      	; 0xb84 <__stack+0x285>
 b82:	81 e3       	ldi	r24, 0x31	; 49
 b84:	f6 01       	movw	r30, r12
 b86:	80 83       	st	Z, r24
 b88:	f7 01       	movw	r30, r14
 b8a:	82 2f       	mov	r24, r18
 b8c:	90 e2       	ldi	r25, 0x20	; 32
 b8e:	88 23       	and	r24, r24
 b90:	19 f0       	breq	.+6      	; 0xb98 <__stack+0x299>
 b92:	91 93       	st	Z+, r25
 b94:	81 50       	subi	r24, 0x01	; 1
 b96:	fb cf       	rjmp	.-10     	; 0xb8e <__stack+0x28f>
 b98:	f7 01       	movw	r30, r14
 b9a:	e2 0f       	add	r30, r18
 b9c:	f1 1d       	adc	r31, r1
 b9e:	10 82       	st	Z, r1
 ba0:	80 e0       	ldi	r24, 0x00	; 0
 ba2:	90 e0       	ldi	r25, 0x00	; 0
 ba4:	29 96       	adiw	r28, 0x09	; 9
 ba6:	ec e0       	ldi	r30, 0x0C	; 12
 ba8:	0c 94 e0 06 	jmp	0xdc0	; 0xdc0 <__epilogue_restores__+0xc>

00000bac <__ftoa_engine>:
 bac:	28 30       	cpi	r18, 0x08	; 8
 bae:	08 f0       	brcs	.+2      	; 0xbb2 <__ftoa_engine+0x6>
 bb0:	27 e0       	ldi	r18, 0x07	; 7
 bb2:	33 27       	eor	r19, r19
 bb4:	da 01       	movw	r26, r20
 bb6:	99 0f       	add	r25, r25
 bb8:	31 1d       	adc	r19, r1
 bba:	87 fd       	sbrc	r24, 7
 bbc:	91 60       	ori	r25, 0x01	; 1
 bbe:	00 96       	adiw	r24, 0x00	; 0
 bc0:	61 05       	cpc	r22, r1
 bc2:	71 05       	cpc	r23, r1
 bc4:	39 f4       	brne	.+14     	; 0xbd4 <__ftoa_engine+0x28>
 bc6:	32 60       	ori	r19, 0x02	; 2
 bc8:	2e 5f       	subi	r18, 0xFE	; 254
 bca:	3d 93       	st	X+, r19
 bcc:	30 e3       	ldi	r19, 0x30	; 48
 bce:	2a 95       	dec	r18
 bd0:	e1 f7       	brne	.-8      	; 0xbca <__ftoa_engine+0x1e>
 bd2:	08 95       	ret
 bd4:	9f 3f       	cpi	r25, 0xFF	; 255
 bd6:	30 f0       	brcs	.+12     	; 0xbe4 <__ftoa_engine+0x38>
 bd8:	80 38       	cpi	r24, 0x80	; 128
 bda:	71 05       	cpc	r23, r1
 bdc:	61 05       	cpc	r22, r1
 bde:	09 f0       	breq	.+2      	; 0xbe2 <__ftoa_engine+0x36>
 be0:	3c 5f       	subi	r19, 0xFC	; 252
 be2:	3c 5f       	subi	r19, 0xFC	; 252
 be4:	3d 93       	st	X+, r19
 be6:	91 30       	cpi	r25, 0x01	; 1
 be8:	08 f0       	brcs	.+2      	; 0xbec <__ftoa_engine+0x40>
 bea:	80 68       	ori	r24, 0x80	; 128
 bec:	91 1d       	adc	r25, r1
 bee:	df 93       	push	r29
 bf0:	cf 93       	push	r28
 bf2:	1f 93       	push	r17
 bf4:	0f 93       	push	r16
 bf6:	ff 92       	push	r15
 bf8:	ef 92       	push	r14
 bfa:	19 2f       	mov	r17, r25
 bfc:	98 7f       	andi	r25, 0xF8	; 248
 bfe:	96 95       	lsr	r25
 c00:	e9 2f       	mov	r30, r25
 c02:	96 95       	lsr	r25
 c04:	96 95       	lsr	r25
 c06:	e9 0f       	add	r30, r25
 c08:	ff 27       	eor	r31, r31
 c0a:	ee 53       	subi	r30, 0x3E	; 62
 c0c:	ff 4f       	sbci	r31, 0xFF	; 255
 c0e:	99 27       	eor	r25, r25
 c10:	33 27       	eor	r19, r19
 c12:	ee 24       	eor	r14, r14
 c14:	ff 24       	eor	r15, r15
 c16:	a7 01       	movw	r20, r14
 c18:	e7 01       	movw	r28, r14
 c1a:	05 90       	lpm	r0, Z+
 c1c:	08 94       	sec
 c1e:	07 94       	ror	r0
 c20:	28 f4       	brcc	.+10     	; 0xc2c <__ftoa_engine+0x80>
 c22:	36 0f       	add	r19, r22
 c24:	e7 1e       	adc	r14, r23
 c26:	f8 1e       	adc	r15, r24
 c28:	49 1f       	adc	r20, r25
 c2a:	51 1d       	adc	r21, r1
 c2c:	66 0f       	add	r22, r22
 c2e:	77 1f       	adc	r23, r23
 c30:	88 1f       	adc	r24, r24
 c32:	99 1f       	adc	r25, r25
 c34:	06 94       	lsr	r0
 c36:	a1 f7       	brne	.-24     	; 0xc20 <__ftoa_engine+0x74>
 c38:	05 90       	lpm	r0, Z+
 c3a:	07 94       	ror	r0
 c3c:	28 f4       	brcc	.+10     	; 0xc48 <__ftoa_engine+0x9c>
 c3e:	e7 0e       	add	r14, r23
 c40:	f8 1e       	adc	r15, r24
 c42:	49 1f       	adc	r20, r25
 c44:	56 1f       	adc	r21, r22
 c46:	c1 1d       	adc	r28, r1
 c48:	77 0f       	add	r23, r23
 c4a:	88 1f       	adc	r24, r24
 c4c:	99 1f       	adc	r25, r25
 c4e:	66 1f       	adc	r22, r22
 c50:	06 94       	lsr	r0
 c52:	a1 f7       	brne	.-24     	; 0xc3c <__ftoa_engine+0x90>
 c54:	05 90       	lpm	r0, Z+
 c56:	07 94       	ror	r0
 c58:	28 f4       	brcc	.+10     	; 0xc64 <__ftoa_engine+0xb8>
 c5a:	f8 0e       	add	r15, r24
 c5c:	49 1f       	adc	r20, r25
 c5e:	56 1f       	adc	r21, r22
 c60:	c7 1f       	adc	r28, r23
 c62:	d1 1d       	adc	r29, r1
 c64:	88 0f       	add	r24, r24
 c66:	99 1f       	adc	r25, r25
 c68:	66 1f       	adc	r22, r22
 c6a:	77 1f       	adc	r23, r23
 c6c:	06 94       	lsr	r0
 c6e:	a1 f7       	brne	.-24     	; 0xc58 <__ftoa_engine+0xac>
 c70:	05 90       	lpm	r0, Z+
 c72:	07 94       	ror	r0
 c74:	20 f4       	brcc	.+8      	; 0xc7e <__ftoa_engine+0xd2>
 c76:	49 0f       	add	r20, r25
 c78:	56 1f       	adc	r21, r22
 c7a:	c7 1f       	adc	r28, r23
 c7c:	d8 1f       	adc	r29, r24
 c7e:	99 0f       	add	r25, r25
 c80:	66 1f       	adc	r22, r22
 c82:	77 1f       	adc	r23, r23
 c84:	88 1f       	adc	r24, r24
 c86:	06 94       	lsr	r0
 c88:	a9 f7       	brne	.-22     	; 0xc74 <__ftoa_engine+0xc8>
 c8a:	84 91       	lpm	r24, Z
 c8c:	10 95       	com	r17
 c8e:	17 70       	andi	r17, 0x07	; 7
 c90:	41 f0       	breq	.+16     	; 0xca2 <__ftoa_engine+0xf6>
 c92:	d6 95       	lsr	r29
 c94:	c7 95       	ror	r28
 c96:	57 95       	ror	r21
 c98:	47 95       	ror	r20
 c9a:	f7 94       	ror	r15
 c9c:	e7 94       	ror	r14
 c9e:	1a 95       	dec	r17
 ca0:	c1 f7       	brne	.-16     	; 0xc92 <__ftoa_engine+0xe6>
 ca2:	e8 e6       	ldi	r30, 0x68	; 104
 ca4:	f0 e0       	ldi	r31, 0x00	; 0
 ca6:	68 94       	set
 ca8:	15 90       	lpm	r1, Z+
 caa:	15 91       	lpm	r17, Z+
 cac:	35 91       	lpm	r19, Z+
 cae:	65 91       	lpm	r22, Z+
 cb0:	95 91       	lpm	r25, Z+
 cb2:	05 90       	lpm	r0, Z+
 cb4:	7f e2       	ldi	r23, 0x2F	; 47
 cb6:	73 95       	inc	r23
 cb8:	e1 18       	sub	r14, r1
 cba:	f1 0a       	sbc	r15, r17
 cbc:	43 0b       	sbc	r20, r19
 cbe:	56 0b       	sbc	r21, r22
 cc0:	c9 0b       	sbc	r28, r25
 cc2:	d0 09       	sbc	r29, r0
 cc4:	c0 f7       	brcc	.-16     	; 0xcb6 <__ftoa_engine+0x10a>
 cc6:	e1 0c       	add	r14, r1
 cc8:	f1 1e       	adc	r15, r17
 cca:	43 1f       	adc	r20, r19
 ccc:	56 1f       	adc	r21, r22
 cce:	c9 1f       	adc	r28, r25
 cd0:	d0 1d       	adc	r29, r0
 cd2:	7e f4       	brtc	.+30     	; 0xcf2 <__ftoa_engine+0x146>
 cd4:	70 33       	cpi	r23, 0x30	; 48
 cd6:	11 f4       	brne	.+4      	; 0xcdc <__ftoa_engine+0x130>
 cd8:	8a 95       	dec	r24
 cda:	e6 cf       	rjmp	.-52     	; 0xca8 <__ftoa_engine+0xfc>
 cdc:	e8 94       	clt
 cde:	01 50       	subi	r16, 0x01	; 1
 ce0:	30 f0       	brcs	.+12     	; 0xcee <__ftoa_engine+0x142>
 ce2:	08 0f       	add	r16, r24
 ce4:	0a f4       	brpl	.+2      	; 0xce8 <__ftoa_engine+0x13c>
 ce6:	00 27       	eor	r16, r16
 ce8:	02 17       	cp	r16, r18
 cea:	08 f4       	brcc	.+2      	; 0xcee <__ftoa_engine+0x142>
 cec:	20 2f       	mov	r18, r16
 cee:	23 95       	inc	r18
 cf0:	02 2f       	mov	r16, r18
 cf2:	7a 33       	cpi	r23, 0x3A	; 58
 cf4:	28 f0       	brcs	.+10     	; 0xd00 <__ftoa_engine+0x154>
 cf6:	79 e3       	ldi	r23, 0x39	; 57
 cf8:	7d 93       	st	X+, r23
 cfa:	2a 95       	dec	r18
 cfc:	e9 f7       	brne	.-6      	; 0xcf8 <__ftoa_engine+0x14c>
 cfe:	10 c0       	rjmp	.+32     	; 0xd20 <__ftoa_engine+0x174>
 d00:	7d 93       	st	X+, r23
 d02:	2a 95       	dec	r18
 d04:	89 f6       	brne	.-94     	; 0xca8 <__ftoa_engine+0xfc>
 d06:	06 94       	lsr	r0
 d08:	97 95       	ror	r25
 d0a:	67 95       	ror	r22
 d0c:	37 95       	ror	r19
 d0e:	17 95       	ror	r17
 d10:	17 94       	ror	r1
 d12:	e1 18       	sub	r14, r1
 d14:	f1 0a       	sbc	r15, r17
 d16:	43 0b       	sbc	r20, r19
 d18:	56 0b       	sbc	r21, r22
 d1a:	c9 0b       	sbc	r28, r25
 d1c:	d0 09       	sbc	r29, r0
 d1e:	98 f0       	brcs	.+38     	; 0xd46 <__ftoa_engine+0x19a>
 d20:	23 95       	inc	r18
 d22:	7e 91       	ld	r23, -X
 d24:	73 95       	inc	r23
 d26:	7a 33       	cpi	r23, 0x3A	; 58
 d28:	08 f0       	brcs	.+2      	; 0xd2c <__ftoa_engine+0x180>
 d2a:	70 e3       	ldi	r23, 0x30	; 48
 d2c:	7c 93       	st	X, r23
 d2e:	20 13       	cpse	r18, r16
 d30:	b8 f7       	brcc	.-18     	; 0xd20 <__ftoa_engine+0x174>
 d32:	7e 91       	ld	r23, -X
 d34:	70 61       	ori	r23, 0x10	; 16
 d36:	7d 93       	st	X+, r23
 d38:	30 f0       	brcs	.+12     	; 0xd46 <__ftoa_engine+0x19a>
 d3a:	83 95       	inc	r24
 d3c:	71 e3       	ldi	r23, 0x31	; 49
 d3e:	7d 93       	st	X+, r23
 d40:	70 e3       	ldi	r23, 0x30	; 48
 d42:	2a 95       	dec	r18
 d44:	e1 f7       	brne	.-8      	; 0xd3e <__ftoa_engine+0x192>
 d46:	11 24       	eor	r1, r1
 d48:	ef 90       	pop	r14
 d4a:	ff 90       	pop	r15
 d4c:	0f 91       	pop	r16
 d4e:	1f 91       	pop	r17
 d50:	cf 91       	pop	r28
 d52:	df 91       	pop	r29
 d54:	99 27       	eor	r25, r25
 d56:	87 fd       	sbrc	r24, 7
 d58:	90 95       	com	r25
 d5a:	08 95       	ret

00000d5c <strrev>:
 d5c:	dc 01       	movw	r26, r24
 d5e:	fc 01       	movw	r30, r24
 d60:	67 2f       	mov	r22, r23
 d62:	71 91       	ld	r23, Z+
 d64:	77 23       	and	r23, r23
 d66:	e1 f7       	brne	.-8      	; 0xd60 <strrev+0x4>
 d68:	32 97       	sbiw	r30, 0x02	; 2
 d6a:	04 c0       	rjmp	.+8      	; 0xd74 <strrev+0x18>
 d6c:	7c 91       	ld	r23, X
 d6e:	6d 93       	st	X+, r22
 d70:	70 83       	st	Z, r23
 d72:	62 91       	ld	r22, -Z
 d74:	ae 17       	cp	r26, r30
 d76:	bf 07       	cpc	r27, r31
 d78:	c8 f3       	brcs	.-14     	; 0xd6c <strrev+0x10>
 d7a:	08 95       	ret

00000d7c <__prologue_saves__>:
 d7c:	2f 92       	push	r2
 d7e:	3f 92       	push	r3
 d80:	4f 92       	push	r4
 d82:	5f 92       	push	r5
 d84:	6f 92       	push	r6
 d86:	7f 92       	push	r7
 d88:	8f 92       	push	r8
 d8a:	9f 92       	push	r9
 d8c:	af 92       	push	r10
 d8e:	bf 92       	push	r11
 d90:	cf 92       	push	r12
 d92:	df 92       	push	r13
 d94:	ef 92       	push	r14
 d96:	ff 92       	push	r15
 d98:	0f 93       	push	r16
 d9a:	1f 93       	push	r17
 d9c:	cf 93       	push	r28
 d9e:	df 93       	push	r29
 da0:	cd b7       	in	r28, 0x3d	; 61
 da2:	de b7       	in	r29, 0x3e	; 62
 da4:	ca 1b       	sub	r28, r26
 da6:	db 0b       	sbc	r29, r27
 da8:	0f b6       	in	r0, 0x3f	; 63
 daa:	f8 94       	cli
 dac:	de bf       	out	0x3e, r29	; 62
 dae:	0f be       	out	0x3f, r0	; 63
 db0:	cd bf       	out	0x3d, r28	; 61
 db2:	09 94       	ijmp

00000db4 <__epilogue_restores__>:
 db4:	2a 88       	ldd	r2, Y+18	; 0x12
 db6:	39 88       	ldd	r3, Y+17	; 0x11
 db8:	48 88       	ldd	r4, Y+16	; 0x10
 dba:	5f 84       	ldd	r5, Y+15	; 0x0f
 dbc:	6e 84       	ldd	r6, Y+14	; 0x0e
 dbe:	7d 84       	ldd	r7, Y+13	; 0x0d
 dc0:	8c 84       	ldd	r8, Y+12	; 0x0c
 dc2:	9b 84       	ldd	r9, Y+11	; 0x0b
 dc4:	aa 84       	ldd	r10, Y+10	; 0x0a
 dc6:	b9 84       	ldd	r11, Y+9	; 0x09
 dc8:	c8 84       	ldd	r12, Y+8	; 0x08
 dca:	df 80       	ldd	r13, Y+7	; 0x07
 dcc:	ee 80       	ldd	r14, Y+6	; 0x06
 dce:	fd 80       	ldd	r15, Y+5	; 0x05
 dd0:	0c 81       	ldd	r16, Y+4	; 0x04
 dd2:	1b 81       	ldd	r17, Y+3	; 0x03
 dd4:	aa 81       	ldd	r26, Y+2	; 0x02
 dd6:	b9 81       	ldd	r27, Y+1	; 0x01
 dd8:	ce 0f       	add	r28, r30
 dda:	d1 1d       	adc	r29, r1
 ddc:	0f b6       	in	r0, 0x3f	; 63
 dde:	f8 94       	cli
 de0:	de bf       	out	0x3e, r29	; 62
 de2:	0f be       	out	0x3f, r0	; 63
 de4:	cd bf       	out	0x3d, r28	; 61
 de6:	ed 01       	movw	r28, r26
 de8:	08 95       	ret

00000dea <_exit>:
 dea:	f8 94       	cli

00000dec <__stop_program>:
 dec:	ff cf       	rjmp	.-2      	; 0xdec <__stop_program>
